#pragma once
// Generated by rococo.carpenter. Timestamp: 13 August 2022 22:28:00// Excel Source: C:\work\rococo\tables\XL\quotes-table.xlsx

#include <tables/rococo.carpenter.test.declarations.h>
#include <rococo.types.h>

Rococo::Quotes::IQuotes_Sexy* FactoryConstructRococoQuotesGetQuoteTable(Rococo::IInstallation* installation);

namespace Rococo::Quotes
{

    enum class QuoteId: int
    {
        None, DoctorJohnson1, Whistle, Biden
    };

    bool AppendString(QuoteId value, IStringPopulator& populator);
    bool TryParse(const fstring& text, QuoteId& result);
    tuple<boolean32,QuoteId> TryParseQuoteId(const fstring& text);
    fstring ToString(QuoteId value);

    ROCOCOAPI IQuotesRow
    {
        virtual QuoteId GetId() const = 0;
        virtual fstring GetText() const = 0;
    };

    #pragma pack(push,4)
    struct QuotesRowSexy
    {
        QuoteId id;
        Rococo::Script::InterfacePointerToStringBuilder text;
    };
    #pragma pack(pop)
}

#include "rococo.carpenter.test.sxh.h"

namespace Rococo::Quotes
{
    ROCOCOAPI IQuotes_MetaData
    {
        virtual fstring GetTitle() const = 0;
        virtual fstring GetOwner() const = 0;
    };

    ROCOCOAPI IQuotes
    {
        virtual IQuotes_Sexy& GetSexyInterface() = 0;
        virtual const IQuotesRow& GetRow(int32 index) const = 0;
        virtual const int32 NumberOfRows() const = 0;
        virtual const IQuotes_MetaData& Meta() const = 0;
    };

    ROCOCOAPI IQuotesSupervisor: IQuotes
    {
        virtual void Free() = 0;
    };

    IQuotesSupervisor* GetQuoteTable(IInstallation& installation);
}
