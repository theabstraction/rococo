// "!scripts/typedef-repo.sxy"

(namespace Sys.Type.Domme)

(using Sys.Type)
(using Sys.IO)

(class TypeDef (defines Sys.Type.Domme.ITypeDef)
	(Sys.Sexml.ISEXMLDirective typeDirective)
)

(method TypeDef.Construct (Sys.Sexml.ISEXMLDirective typeDirective)-> :
	(this.typeDirective = typeDirective)
)

(method TypeDef.ThrowWithConflict (Sys.Sexml.ISEXMLDirective typeDirective)(IString msg) -> :
	(Sys.Reflection.IExpression s = (typeDirective.S))
	
	(Sys.Type.IStringBuilder err = (Sys.Type.NewParagraphBuilder))
	
	(Sys.Reflection.IExpression sThis = (this.typeDirective.S))
	(#build err "Conflict: " msg "; Against: ")
	(sThis.AppendSourceNameTo err)
	(sb ", line #" sThis.LineNumber ", column #" sThis.Column)
	(s.Throw 0 err)
)

(factory Sys.Type.Domme.NewTypeDef Sys.Type.Domme.ITypeDef (Sys.Sexml.ISEXMLDirective typeDirective) : (construct TypeDef typeDirective))

(class TypeDefs (defines Sys.Type.Domme.ITypeDefs)
	(IStringBuilder rootPath) // defaults to the current directory
	(map IString Sys.Type.Domme.ITypeDef typenameToTypeDef)
)

(function Slash -> (IString slash):
	(#token innerSlash)
	(Sys.IO.AppendDirectorySeparator innerSlash)	
	(slash = innerSlash)
)

(method TypeDefs.Construct :
	(this.rootPath = (Sys.Type.NewPathBuilder))
	(this.rootPath.ThrowIfAppendWouldTruncate)
	(Sys.IO.AppendCurrentDirectory this.rootPath)
	(MakeEndsWithSlash this.rootPath)
	(map IString Sys.Type.Domme.ITypeDef typenameToTypeDef)
	(this.typenameToTypeDef = typenameToTypeDef)
)

(factory Sys.Type.Domme.TypeDefRepo Sys.Type.Domme.ITypeDefs : (construct TypeDefs))

(function MakeEndsWithSlash (IStringBuilder path) -> :
	(if (not (Sys.Type.Strings.EndsWith path Slash))
		(path.AppendIString Slash)
	)
)

(method TypeDefs.SetRootPath (IString rootDirectory) -> :
	(AssertDirectory rootDirectory)
	(this.rootPath.Clear)
	(this.rootPath rootDirectory)
	(MakeEndsWithSlash this.rootPath)
)

(method TypeDefs.AddTypedefFile (IString relativeToCurrentPath) -> :
	(Sys.Type.IStringBuilder absPath = (Sys.Type.NewPathBuilder))
	(absPath.ThrowIfAppendWouldTruncate)
	(#build absPath this.rootPath relativeToCurrentPath)
	
	(Sys.Reflection.IExpression sTypedDef = (Sys.IO.LoadExpression absPath))
	
	(Sys.Sexml.ISEXMLReader reader (Sys.Sexml.ReadSexml sTypedDef))
	
	(this.Parse reader)
)

(function AddType (TypeDefs typeDefs) (Sys.Sexml.ISEXMLDirective typeDirective) -> :
	(Sys.Type.Domme.ITypeDef typeDef (Sys.Type.Domme.NewTypeDef typeDirective))
	
	// TODO - this.typenameToTypeDef.Inser gives an invalid code-completion)
	(IString cppType = (typeDirective.GetAttributeString "CPP" true))
	(node n = (typeDefs.typenameToTypeDef cppType))
	(if n
		(Sys.Type.Domme.ITypeDef preExistingTypeDef = n.Value)
		(Sys.Reflection.IExpression s = (typeDirective.S))
		(preExistingTypeDef.ThrowWithConflict typeDirective "Duplicate CPP type")
	)
	(typeDefs.typenameToTypeDef.Insert cppType typeDef)
	
	(Sys.Sexml.ISEXMLAttribute attrAlias = (typeDirective.FindAttribute "Alias"))
	
	(for (Int32 i = 0)(i < attrAlias.ValueCount)(i += 1)
		(Sys.Reflection.IExpression sAttrValue = (attrAlias.Value i))		
		(IString aliasValue = (sAttrValue.Text))
		
		(node n2 = (typeDefs.typenameToTypeDef aliasValue))
		(if n
			(Sys.Type.Domme.ITypeDef preExistingTypeDef = n2.Value)
			(IStringBuilder sbErr = (Sys.Type.NewParagraphBuilder))
			(#build sbErr "Duplicate CPP type (with alias " aliasValue ")")
			(preExistingTypeDef.ThrowWithConflict typeDirective sbErr)
		)
		
		(typeDefs.typenameToTypeDef.Insert aliasValue typeDef)
	)
)

(method TypeDefs.ParseValueType (Sys.Sexml.ISEXMLDirective valueTypeDirective) -> :
	(AddType this valueTypeDirective)
)

(method TypeDefs.ParseMarshallValueType (Sys.Sexml.ISEXMLDirective marshallTypeDirective) -> :
	(AddType this marshallTypeDirective)
)

(method TypeDefs.ParseStructType (Sys.Sexml.ISEXMLDirective structTypeDirective) -> :
	(AddType this structTypeDirective)
)

(method TypeDefs.Parse (Sys.Sexml.ISEXMLReader reader)-> :
	(Sys.Sexml.ISEXMLDirective header = (reader.GetFirstDirective "Header" true))
	
	(IString headerType = (header.GetAttributeString "Type" true))
	(if (not (Sys.Type.Strings.IsExactMatch headerType "Rococo_Domme_TypeDefs"))
		(Sys.Reflection.IExpression s = header.S)
		(s.Throw 0 "Cannot find (Type Rococo_Domme_TypeDefs) in Header directive")
	)
	
	(for(Int32 i = 0)(i < reader.DirectiveCount)(i += 1)
		(Sys.Sexml.ISEXMLDirective rootDirective = (reader.Directive i))
		(if (Sys.Type.Strings.IsExactMatch rootDirective.Name "ValueType")
			(this.ParseValueType rootDirective)
		)
		(if (Sys.Type.Strings.IsExactMatch rootDirective.Name "MarshallValueType")
			(this.ParseMarshallValueType rootDirective)
		)
		(if (Sys.Type.Strings.IsExactMatch rootDirective.Name "Struct")
			(this.ParseStructType rootDirective)
		)
	)
)

(method TypeDefs.MarshalCppName (IString rawCppName)->(IString marshalledCppName):
	(if (Sys.Type.Strings.IsExactMatch rawCppName "bool")
		(marshalledCppName = "boolean32")
	else
		(marshalledCppName = rawCppName)
	)
)
