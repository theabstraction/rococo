// "!scripts/typedef-repo.sxy"

(namespace Sys.Type.Domme)

(using Sys.Type)
(using Sys.IO)

(class TypeDef (defines Sys.Type.Domme.ITypeDef)
	(Sys.Sexml.ISEXMLDirective typeDirective)
	(Int32 type)
)

(method TypeDef.Construct (Sys.Sexml.ISEXMLDirective typeDirective)(Int32 type)-> :
	(this.typeDirective = typeDirective)
	(this.type = type)
)

(method TypeDef.Type -> (Int32 type):
	(type = this.type)
)

(method TypeDef.Directive -> (Sys.Sexml.ISEXMLDirective directive):
	(directive = this.typeDirective)
)

(method TypeDef.CppType -> (IString cppType):
	(Sys.Type.IStringBuilder sb = NewPathBuilder)
	(cppType = (this.typeDirective.GetAttributeString "CPP" true))	
)

(method TypeDef.SxyType -> (IString sxyType):
	(Sys.Type.IStringBuilder sb = NewPathBuilder)
	(sxyType = (this.typeDirective.GetAttributeString "SXY" true))	
)

(method TypeDef.CppTypeAndRef -> (IString cppTypeAndRef):
	(Sys.Type.IStringBuilder sb = NewPathBuilder)
	(IString cppType = (this.typeDirective.GetAttributeString "CPP" true))
	
	(sb cppType)
	
	(if (this.type == (#Sys.Type.Domme.TypeDefStructType))
		(sb "&&")
	)
	
	(cppTypeAndRef = sb)
)

(method TypeDef.ThrowWithConflict (Sys.Sexml.ISEXMLDirective typeDirective)(IString msg) -> :
	(Sys.Reflection.IExpression s = (typeDirective.S))
	
	(Sys.Type.IStringBuilder err = (Sys.Type.NewParagraphBuilder))
	
	(Sys.Reflection.IExpression sThis = (this.typeDirective.S))
	(#build err "Conflict: " msg "; Against: ")
	(sThis.AppendSourceNameTo err)
	(sb ", line #" sThis.LineNumber ", column #" sThis.Column)
	(s.Throw 0 err)
)

(factory Sys.Type.Domme.NewTypeDef Sys.Type.Domme.ITypeDef (Sys.Sexml.ISEXMLDirective typeDirective)(Int32 type) : (construct TypeDef typeDirective type))

(class TypeDefs (defines Sys.Type.Domme.ITypeDefs)
	(IStringBuilder rootPath) // defaults to the current directory
	(map IString Sys.Type.Domme.ITypeDef typenameToTypeDef)
)

(function Slash -> (IString slash):
	(#token innerSlash)
	(Sys.IO.AppendDirectorySeparator innerSlash)	
	(slash = innerSlash)
)

(method TypeDefs.Construct :
	(this.rootPath = (Sys.Type.NewPathBuilder))
	(this.rootPath.ThrowIfAppendWouldTruncate)
	(Sys.IO.AppendCurrentDirectory this.rootPath)
	(MakeEndsWithSlash this.rootPath)
	(map IString Sys.Type.Domme.ITypeDef typenameToTypeDef)
	(this.typenameToTypeDef = typenameToTypeDef)
)

(function FindStructTypeByRef (TypeDefs typedefs)(IString cppTypeNameByRef) -> (Sys.Type.Domme.ITypeDef typedef):
	(IStringBuilder cppTypeNameSansRef = (Sys.Type.NewPathBuilder))
	(cppTypeNameSansRef cppTypeNameByRef)
	(cppTypeNameSansRef.SetLength (cppTypeNameSansRef.Length - 1))
	
	(node n = (typedefs.typenameToTypeDef cppTypeNameSansRef))
	(if n (typedef = n.Value)
		(if (typedef.Type == (#Sys.Type.Domme.TypeDefStructType))
			(return)
		)
		
		(Sys.Sexml.ISEXMLDirective directive = typedef.Directive)
		(Sys.Reflection.IExpression s = directive.S)
		(s.Throw 0 "Only structs may be passed by-reference")
	)
)

(method TypeDefs.Find (IString cppTypeName) -> (Sys.Type.Domme.ITypeDef typedef):
	(if (Sys.Type.Strings.EndsWith cppTypeName "&&")
		(FindStructTypeByRef this cppTypeName -> typedef)
		(return)
	)

	(node n = (this.typenameToTypeDef cppTypeName))
	(if n (typedef = n.Value))
)

(factory Sys.Type.Domme.TypeDefRepo Sys.Type.Domme.ITypeDefs : (construct TypeDefs))

(function MakeEndsWithSlash (IStringBuilder path) -> :
	(if (not (Sys.Type.Strings.EndsWith path Slash))
		(path.AppendIString Slash)
	)
)

(method TypeDefs.SetRootPath (IString rootDirectory) -> :
	(AssertDirectory rootDirectory)
	(this.rootPath.Clear)
	(this.rootPath rootDirectory)
	(MakeEndsWithSlash this.rootPath)
)

(method TypeDefs.AddTypedefFile (IString relativeToCurrentPath) -> :
	(Sys.Type.IStringBuilder absPath = (Sys.Type.NewPathBuilder))
	(absPath.ThrowIfAppendWouldTruncate)
	(#build absPath this.rootPath relativeToCurrentPath)
	
	(Sys.Reflection.IExpression sTypedDef = (Sys.IO.LoadExpression absPath))
	
	(Sys.Sexml.ISEXMLReader reader (Sys.Sexml.ReadSexml sTypedDef))
	
	(Parse this reader)
)

(function AddType (TypeDefs typeDefs) (Sys.Sexml.ISEXMLDirective typeDirective) (Int32 type) -> :
	(Sys.Type.Domme.ITypeDef typeDef (Sys.Type.Domme.NewTypeDef typeDirective type))
	
	// TODO - this.typenameToTypeDef.Inser gives an invalid code-completion)
	(IString cppType = (typeDirective.GetAttributeString "CPP" true))
	(node n = (typeDefs.typenameToTypeDef cppType))
	(if n
		(Sys.Type.Domme.ITypeDef preExistingTypeDef = n.Value)
		(Sys.Reflection.IExpression s = (typeDirective.S))
		(preExistingTypeDef.ThrowWithConflict typeDirective "Duplicate CPP type")
	)
	(typeDefs.typenameToTypeDef.Insert cppType typeDef)
	
	(Sys.Sexml.ISEXMLAttribute attrAlias = (typeDirective.FindAttribute "Alias"))

	(for (Int32 i = 0)(i < attrAlias.ValueCount)(i += 1)
		(Sys.Reflection.IExpression sAttrValue = (attrAlias.Value i))		
		(IString aliasValue = (sAttrValue.Text))
		(node n2 = (typeDefs.typenameToTypeDef aliasValue))
		(if n
			(Sys.Type.Domme.ITypeDef preExistingTypeDef = n2.Value)
			(IStringBuilder sbErr = (Sys.Type.NewParagraphBuilder))
			(#build sbErr "Duplicate CPP type (with alias " aliasValue ")")
			(preExistingTypeDef.ThrowWithConflict typeDirective sbErr)
		)
		
		(typeDefs.typenameToTypeDef.Insert aliasValue typeDef)
	)
)

(function ParseValueType (TypeDefs typeDefs) (Sys.Sexml.ISEXMLDirective valueTypeDirective) -> :
	(AddType typeDefs valueTypeDirective (#Sys.Type.Domme.TypeDefValueType))
)

(function ParseMarshallValueType (TypeDefs typeDefs) (Sys.Sexml.ISEXMLDirective marshallTypeDirective) -> :
	(AddType typeDefs marshallTypeDirective (#Sys.Type.Domme.TypeDefMarshallValueType))
)

(function ParseStructType(TypeDefs typeDefs)  (Sys.Sexml.ISEXMLDirective structTypeDirective) -> :
	(AddType typeDefs structTypeDirective (#Sys.Type.Domme.TypeDefStructType))
)

(function ParseMarshallStructType(TypeDefs typeDefs)  (Sys.Sexml.ISEXMLDirective structTypeDirective) -> :
	(AddType typeDefs structTypeDirective (#Sys.Type.Domme.TypeDefStructType))
)

(function Parse (TypeDefs typeDefs) (Sys.Sexml.ISEXMLReader reader)-> :
	(Sys.Sexml.ISEXMLDirective header = (reader.GetFirstDirective "Header" true))
	
	(IString headerType = (header.GetAttributeString "Type" true))
	(if (not (Sys.Type.Strings.IsExactMatch headerType "Rococo_Domme_TypeDefs"))
		(Sys.Reflection.IExpression s = header.S)
		(s.Throw 0 "Cannot find (Type Rococo_Domme_TypeDefs) in Header directive")
	)
	
	(for(Int32 i = 0)(i < reader.DirectiveCount)(i += 1)
		(Sys.Sexml.ISEXMLDirective rootDirective = (reader.Directive i))
		(if (Sys.Type.Strings.IsExactMatch rootDirective.Name "ValueType")
			(ParseValueType typeDefs rootDirective)
		)
		(if (Sys.Type.Strings.IsExactMatch rootDirective.Name "MarshalledValueType")
			(ParseMarshallValueType typeDefs rootDirective)
		)
		(if (Sys.Type.Strings.IsExactMatch rootDirective.Name "MarshalledStructType")
			(ParseMarshallStructType typeDefs rootDirective)
		)
		(if (Sys.Type.Strings.IsExactMatch rootDirective.Name "Struct")
			(ParseStructType typeDefs rootDirective)
		)
	)
)

(method TypeDefs.MarshalCppName (IString rawCppName)->(IString marshalledCppName):
	(if (Sys.Type.Strings.IsExactMatch rawCppName "bool")
		(marshalledCppName = "boolean32")
	else
		(marshalledCppName = rawCppName)
	)
)
