(Header 
	(Type Rococo_Domme_TypeDefs)
	(Author "Mark Anthony Taylor")
)


//For ValueType, MarshalledValueType, MarshalledStructType and Struct :
//   The Alias attribute gives the list in C++ of equivalent type-names
//   The CPP attribute specifies the principle typename in C++
//   The ExpandedCPPName attribute gives the expanded C++ name to use when explicit namespacing is required. This will bloat the generated API, and make it harder to read, but may help resolve namespace conflicts. If unspecified no expansion occurs.


// ValueType define types in C++ and Sexy that are passed...by value. In the Sexy-Script-language outputs must all be value-types.
// The SXY attribute specifies the bitwise and semantic equivalent in SXY.
(ValueType (CPP int32) (SXY Int32) (#List Alias int long int32 i32 Int32))
(ValueType (CPP int64) (SXY Int64) (#List Alias i64))
(ValueType (CPP float) (SXY Float32) (#List Alias float32 f32 Float32 Float))
(ValueType (CPP double) (SXY Float64) (#List Alias float64 f64 Float64 Double))
(ValueType (CPP boolean32) (SXY Bool) (#List Alias b32))

// MarshalledValueType define types in C++ and Sexy that are passed by value, but are not bitwise equivalent and require support in C++ marshalling code to correctly map to the Sexy type.
// The SXY attribute specifies the semantic equivalent in SXY.
(MarshalledValueType (CPP bool) (SXY Bool))
(MarshalledValueType (CPP fstring) (SXY IString)(ExpandedCPPName Rococo::fstring)(#List Alias Rococo::fstring cstr)(ProhibitOutput "To emit a string from a Domme method, pass a string populator as input reference, the Sexy script will see this as an IStringBuilder"))

// MarshalledStructType define types in C++ and Sexy that are passed by reference, but are not bitwise equivalent and require support in C++ marshalling code to correctly map to the Sexy type.
// The SXY attribute specifies the semantic equivalent in SXY.
(MarshalledStructType (CPP IStringPopulator) (SXY IStringBuilder)(ExpandedCPPName Rococo::IStringPopulator)(ProhibitOutput "A Domme method cannot return a reference to an interface"))

// Struct define types in C++ and Sexy that are passed by reference. In the Sexy-Script-language outputs cannot be struct types. All such types in Sexy are defined using the struct definition in a root directive.
// The SXY attribute specifies the bitwise and semantic equivalent in SXY.
(Struct (CPP Vec2)(SXY Sys.Maths.Vec2)(ExpandedCPPName Rococo::Vec2)(#List Alias Rococo::Vec2))
(Struct (CPP Vec3)(SXY Sys.Maths.Vec3)(ExpandedCPPName Rococo::Vec3)(#List Alias Rococo::Vec3))
(Struct (CPP Vec4)(SXY Sys.Maths.Vec4)(ExpandedCPPName Rococo::Vec4)(#List Alias Rococo::Vec4))
(Struct (CPP Quat)(SXY Sys.Maths.Quat)(ExpandedCPPName Rococo::Quat)(#List Alias Rococo::Quat))
(Struct (CPP Vec2i)(SXY Sys.Maths.Vec2i)(ExpandedCPPName Rococo::Vec2i)(#List Alias Rococo::Vec2i))
(Struct (CPP GuiRectf)(SXY Sys.Maths.Rectf)(ExpandedCPPName Rococo::GuiRectf)(#List Alias Rococo::GuiRectf))
(Struct (CPP GuiRect)(SXY Sys.Maths.Recti)(ExpandedCPPName Rococo::GuiRecti)(#List Alias Rococo::GuiRecti))
