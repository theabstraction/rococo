(Header 
	(Type Rococo_Domme)
	(Author "Mark Anthony Taylor")
)

// For file targets the Domme generator will replace
//													^^ with the fq namespace and interface name where its dots are substituted with forward slashes
//													^ with the interface name

// Every Domme needs a namespace. Files can contain > 1 Domme directive if multiple namespaces are defined in the same file
// If one of SxyNamespace and CppNamespace is defined, and the other not, then both are assigned to the same string. If both are defined the strings and thus the namespaces can be different

// SetDefaultFactoryPrefix is used to set the token used to prefix C++ factory functions. The suffix is generated by taking the interface name and stripping it of the leading 'I' character, if it is led by 'I'

(Typedefs
	(PathRelativeToThis "typedefs.domme.sexml")
)

(SetDefaults
	(CppFactoryPrefix Create)
)

(Domme
	(SxyNamespace Rococo.Animals) 
	:
	(Interface
		(Name ICat)
		(Implementation Cat)
		(SxyTarget "!script/^^")
		(CppHeaderTarget "$(source)rococo/include/^^.hpp")
		(CppSourceTarget "$(source)^^_Domme.cpp")
		(' Methods
			(MakeBiscuits)
			(Mew)
		)
	)
)


(Domme
	(SxyNamespace Rococo.Animals) 
	:
	(Interface
		(Name IDog)
		(Implementation Dog)
		(SxyTarget "!script/^^")
		(CppHeaderTarget "$(source)rococo/include/^^.hpp")
		(CppSourceTarget "$(source)^^_Domme.cpp")
		(' Methods
			(Bark (float hz = 512))
			(GoWalkies (const Vec3& targetPosition)->(bool success))
			(SetName (cstr name = "&tRover&r&n&x01"))
		)
	)
)
