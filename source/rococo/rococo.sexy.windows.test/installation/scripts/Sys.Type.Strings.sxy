(using Sys.Type)

(interface Sys.Type.IString
	(Length -> (Int32 length))
	(Buffer -> (Pointer buffer))
)

(interface Sys.Type.IBuffer
	(Capacity -> (Int32 capacity))
	(Data -> (Pointer data))
)

(class AlignedHeap
	(implements IBuffer)
	(Int32 capacity)
	(Pointer data)
)

(method AlignedHeap.Capacity -> (Int32 capacity):
	(capacity = this.capacity)
)

(method AlignedHeap.Data -> (Pointer data):
	(data = this.data)
)

(function ValidateNativePointer (Pointer x) -> :
	(if (x == 0) (Sys.Throw -1 "Null reference exception"))
)

(method AlignedHeap.Construct (Int32 capacity) (Int32 alignment):
	(this.capacity = capacity)
	(Sys.Native.AlignedMalloc capacity alignment -> this.data)
	(ValidateNativePointer this.data)
)

(method AlignedHeap.Destruct -> :
	(Sys.Native.AlignedFree this.data)
)

(class NativeException
	(implements IException)
	(Int32 errorCode)
	(Pointer msgHandle)
)

(method NativeException.ErrorCode -> (Int32 errorCode):
	(errorCode = this.errorCode)
)

(method NativeException.Message -> (IString message):
	(Sys.Type.GetSysMessage this.msgHandle -> message)
)

(class StringConstant
	(implements IString)
	(Int32 length)
	(Pointer buffer)
)

(method StringConstant.Length -> (Int32 charCount):
    (charCount = this.length)
)

(method StringConstant.Buffer -> (Pointer buffer):
    (buffer = this.buffer)
)
	
(class MemoImpl
    (implements IString)
    (Int32 length)
    (Pointer buffer)
)

(method MemoImpl.Length -> (Int32 charCount):
	(charCount = this.length)
)

(method MemoImpl.Buffer -> (Pointer buffer):
    (buffer = this.buffer)
)

(method MemoImpl.Destruct -> :
    (Sys.Native.FreeMemoString (this.buffer))
)

(method MemoImpl.Construct (IString s) -> :
	(Sys.Native.CreateMemoString s.Buffer s.Length -> this.buffer this.length)	
)

(interface Sys.Type.Formatters.AsDecimal)
(interface Sys.Type.Formatters.AsHex)
(interface Sys.Type.Formatters.AsSpecE)
(interface Sys.Type.Formatters.AsSpecF)
(interface Sys.Type.Formatters.AsSpecG)
(interface Sys.Type.Formatters.AsNewLine)

(function FormatDecimal -> (Sys.Type.Formatters.AsDecimal nullType):)
(function FormatHex -> (Sys.Type.Formatters.AsHex nullType):)
(function FormatSpecE -> (Sys.Type.Formatters.AsSpecE nullType):)
(function FormatSpecF -> (Sys.Type.Formatters.AsSpecF nullType):)
(function FormatSpecG -> (Sys.Type.Formatters.AsSpecG nullType):)
(function FormatNewLine -> (Sys.Type.Formatters.AsNewLine nullType):)

(using Sys.Type.Formatters)

(class StringBuilder 
	(implements IStringBuilder)

	(Int32 length)
	(Pointer buffer)
	(Int32 capacity)
)

(method StringBuilder.Construct (Int32 capacity) -> :
	(this.length = 0)
	(this.capacity = capacity)
	(Sys.Native.CreateStringBuilder capacity -> this.buffer)
	(ValidateNativePointer this.buffer)
)

(method StringBuilder.AppendIString  (IString s) -> :
	(Sys.Native.StringBuilderAppendIString this.buffer s.Buffer s.Length -> this.length)
)

(method StringBuilder.AppendInt32  (Int32 x) -> :
	(Sys.Native.StringBuilderAppendInt32 this.buffer x -> this.length)
)

(method StringBuilder.AppendInt64  (Int64 x) -> :
	(Sys.Native.StringBuilderAppendInt64 this.buffer x -> this.length)
)

(method StringBuilder.AppendFloat32  (Float32 x) -> :
	(Sys.Native.StringBuilderAppendFloat32 this.buffer x -> this.length)
)

(method StringBuilder.AppendFloat64  (Float64 x) -> :
	(Sys.Native.StringBuilderAppendFloat64 this.buffer x -> this.length)
)

(method StringBuilder.AppendBool  (Bool x) -> :
	(Sys.Native.StringBuilderAppendBool this.buffer x -> this.length)
)

(method StringBuilder.AppendPointer (Pointer x) -> :
	(Sys.Native.StringBuilderAppendPointer this.buffer x -> this.length)
)

(method StringBuilder.AppendAsDecimal (Sys.Type.Formatters.AsDecimal x) -> :
	(Sys.Native.StringBuilderAppendAsDecimal this.buffer ->)
)

(method StringBuilder.AppendAsHex (Sys.Type.Formatters.AsHex x) -> :
	(Sys.Native.StringBuilderAppendAsHex this.buffer ->)
)

(method StringBuilder.AppendAsSpecE (Sys.Type.Formatters.AsSpecE null) -> :
	(Sys.Native.StringBuilderAppendAsSpec this.buffer 1 ->)
)

(method StringBuilder.AppendAsSpecF (Sys.Type.Formatters.AsSpecF null) -> :
	(Sys.Native.StringBuilderAppendAsSpec this.buffer 2 ->)
)

(method StringBuilder.AppendAsSpecG (Sys.Type.Formatters.AsSpecG null) -> :
	(Sys.Native.StringBuilderAppendAsSpec this.buffer 3 ->)
)

(method StringBuilder.AppendAsNewLine (Sys.Type.Formatters.AsNewLine null) -> :
	(this.AppendIString "&r&n")
)

(method StringBuilder.SetLength (Int32 length) -> :
	(Sys.Native.StringBuilderSetLength this.buffer length -> this.length)
)

(method StringBuilder.SetFormat (Sys.Type.Int32 precision) (Sys.Type.Int32 width) (Sys.Type.Bool isZeroPrefixed) (Sys.Type.Bool isRightAligned) -> :
	(Sys.Native.StringBuilderSetFormat this.buffer precision width isZeroPrefixed isRightAligned)
)

(method StringBuilder.Clear -> :
	(this.length = 0)
	(Sys.Native.StringBuilderClear this.buffer ->)	
)

(method StringBuilder.Buffer -> (Sys.Type.Pointer buffer):
	(buffer = this.buffer)
)

(method StringBuilder.Length -> (Sys.Type.Int32 length):
	(length = this.length)
)

(method StringBuilder.Destruct -> :
    (Sys.Native.FreeStringBuilder (this.buffer))
)

(method StringBuilder.AppendSubstring (IString s) (Int32 startPos) (Int32 numberOfChars) -> :
	(Sys.Native.StringBuilderAppendSubstring this.buffer s.Buffer s.Length startPos numberOfChars -> this.length)
)

(method StringBuilder.ToUpper (Int32 start) (Int32 end) -> :
	(Sys.Native.StringBuilderSetCase this.buffer start end true)
)

(method StringBuilder.ToLower (Int32 start) (Int32 end) -> :
	(Sys.Native.StringBuilderSetCase this.buffer start end false)
)

(function StringCompare (IString s) (IString t) -> (Int32 diff):
	(Sys.Native.StringCompare s.Buffer t.Buffer -> diff)
)

(function StringCompareI (IString s) (IString t) -> (Int32 diff):
	(Sys.Native.StringCompareI s.Buffer t.Buffer -> diff)
)

(function ExactMatch (IString s) (IString t) -> (Bool match):
	(Int32 diff)
	(Sys.Native.StringCompare s.Buffer t.Buffer -> diff)
	(if (diff == 0) (match = true) else (match = false))
)

(function FindLeft (IString container) (Int32 startPos) (IString substring) -> (Int32 position):
	(Sys.Native.StringFindLeft container.Buffer container.Length startPos substring.Buffer substring.Length false -> position)
)

(function FindRight (IString container) (Int32 rightPos) (IString substring) -> (Int32 position):
	(Sys.Native.StringFindRight container.Buffer container.Length rightPos substring.Buffer substring.Length false -> position)
)

(function FindLeftI (IString container) (Int32 startPos) (IString substring) -> (Int32 position):
	(Sys.Native.StringFindLeft container.Buffer container.Length startPos substring.Buffer substring.Length true -> position)
)

(function FindRightI (IString container) (Int32 rightPos) (IString substring) -> (Int32 position):
	(Sys.Native.StringFindRight container.Buffer container.Length rightPos substring.Buffer substring.Length true -> position)
)

(archetype Sys.Type.Strings.ForEachSubstring (IStringBuilder sb) (Int32 index) ->)

(function StringSplit (IStringBuilder sb) (IString container) (IString sep) (Sys.Type.Strings.ForEachSubstring f) -> :
	(if ((sep.Length == 0) or ((container.Length) == 0)) (return))
	(Int32 len = container.Length)
	(Int32 i = 0)
	(Int32 last = 0)
	(Int32 index = 0)
	(while (i < len)
		(i = (Strings.FindLeftNoCase container i sep))
		(if (i < 0) (sb.AppendSubstring container last container.Length) (f sb index) (break))
		(sb.AppendSubstring container last (i - last))
		(last = (i + sep.Length))
		(i = (i + sep.Length))
		(f sb index)
		(index = (index + 1))
	)
)

(interface Sys.Type.IStringBuilder
	(extends Sys.Type.IString)
	(attribute builder Append) // if we have a variable s of type IStringBuilder then (s X) calls (s.AppendTypeX X), e.g (s 1) calls (s.AppendInt32 1)

	(AppendInt32 (Int32 x) -> )
	(AppendInt64 (Int64 x) -> )
	(AppendFloat32 (Float32 x) -> )
	(AppendFloat64 (Float64 x) -> )
	(AppendBool (Bool x) -> )
	(AppendPointer (Pointer x) -> )
	(AppendIString (IString s) -> )
	(AppendAsHex (AsHex null) ->)
	(AppendAsDecimal (AsDecimal null) ->)
	(AppendAsSpecE (AsSpecE null) ->)
	(AppendAsSpecF (AsSpecF null) ->)
	(AppendAsSpecG (AsSpecG null) ->)
	(AppendAsNewLine (AsNewLine null) ->)
	(AppendSubstring (IString s) (Int32 startPos) (Int32 numberOfChars) ->)
	(SetFormat (Sys.Type.Int32 precision) (Sys.Type.Int32 width) (Sys.Type.Bool isZeroPrefixed) (Sys.Type.Bool isRightAligned) ->)
	(SetLength (Int32 length) ->)
	(ToUpper (Int32 start) (Int32 end) ->)
	(ToLower (Int32 start) (Int32 end) ->)
	(Clear ->)
)

(namespace Sys.Type.Strings)
	(alias StringCompare Sys.Type.Strings.Compare)
	(alias StringCompareI Sys.Type.Strings.CompareInsensitive)
	(alias ExactMatch Sys.Type.Strings.IsExactMatch)
	(alias FindLeft Sys.Type.Strings.FindLeftWithCase)
	(alias FindRight Sys.Type.Strings.FindRightWithCase)
	(alias FindLeftI Sys.Type.Strings.FindLeftNoCase)
	(alias FindRightI Sys.Type.Strings.FindRightNoCase)
	(alias StringSplit Sys.Type.Strings.Split)

(namespace Sys.Type.Formatters)
	(alias FormatDecimal Sys.Type.Formatters.Decimal)
	(alias FormatHex Sys.Type.Formatters.Hex)
	(alias FormatSpecE Sys.Type.Formatters.SpecE)
	(alias FormatSpecF Sys.Type.Formatters.SpecF)
	(alias FormatSpecG Sys.Type.Formatters.SpecG)
	(alias FormatNewLine Sys.Type.Formatters.NewLine)

(factory Sys.Type.StringBuilder IStringBuilder (Int32 capacity):
	(construct StringBuilder capacity)
)

(factory Sys.Type.Memo IString (IString s):
	(construct MemoImpl s)
)

(factory Sys.Type.AllocAligned IBuffer (Int32 capacity) (Int32 alignment):
	(construct AlignedHeap capacity alignment)
)