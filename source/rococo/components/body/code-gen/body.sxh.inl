#pragma once

// Generated by BennyHill on 02/08/2023 18:11:08 UTC

#include <sexy.script.h>

// BennyHill generated Sexy native functions for Rococo::Components::Generated::IBodyBase 

namespace Rococo::Components::API::ForIBodyComponent
{
	Ref<Rococo::Components::IBodyComponent> Add(ROID roid);
	Ref<Rococo::Components::IBodyComponent> Get(ROID roid);
}

namespace
{
	using namespace Rococo;
	using namespace Rococo::Sex;
	using namespace Rococo::Script;
	using namespace Rococo::Compiler;

	void Add_BodyComponent(NativeCallEnvironment& _nce)
	{
		uint8* _sf = _nce.cpu.SF();
		ptrdiff_t _offset = 2 * sizeof(size_t);

		Rococo::Components::RefPointers* pOutput;
		ReadInput(pOutput, _sf, _offset);

		_offset += sizeof(pOutput);

		ROID roid;
		ReadInput(roid, _sf, _offset);

		_offset += sizeof(ROID);

		auto ref = Rococo::Components::API::ForIBodyComponent::Add(roid);
		Rococo::Components::AssignRef(*pOutput, ref);
	}

	void Get_BodyComponent(NativeCallEnvironment& _nce)
	{
		uint8* _sf = _nce.cpu.SF();
		ptrdiff_t _offset = 2 * sizeof(size_t);

		Rococo::Components::RefPointers* pOutput;
		ReadInput(pOutput, _sf, _offset);

		_offset += sizeof(pOutput);

		ROID roid;
		ReadInput(roid, _sf, _offset);

		_offset += sizeof(ROID);

		auto ref = Rococo::Components::API::ForIBodyComponent::Get(roid);
		Rococo::Components::AssignRef(*pOutput, ref);
	}

	void Destruct_BodyComponent(NativeCallEnvironment& _nce)
	{
		uint8* _sf = _nce.cpu.SF();
		ptrdiff_t _offset = 2 * sizeof(size_t);

		RefPointers* pOutput;
		ReadInput(pOutput, _sf, _offset);

		pOutput->life->ReleaseRef();
	}

	void AddNativeCalls_RococoComponentsGeneratedIBodyBase_GetAndAdd(const INamespace& ns, Rococo::Script::IPublicScriptSystem& ss)
	{
		ss.AddNativeCall(ns, Add_BodyComponent, nullptr, "AddBody (Sys.Type.ComponentRef outputRef) (ROID id) -> ", __FILE__, __LINE__);
		ss.AddNativeCall(ns, Get_BodyComponent, nullptr, "GetBody (Sys.Type.ComponentRef outputRef) (ROID id) -> ", __FILE__, __LINE__);
		ss.AddNativeCall(ns, Destruct_BodyComponent, nullptr, "DestructBody (Sys.Type.ComponentRef outputRef) -> ", __FILE__, __LINE__);
	}
}
namespace
{
	using namespace Rococo;
	using namespace Rococo::Sex;
	using namespace Rococo::Script;
	using namespace Rococo::Compiler;

	void NativeRococoComponentsGeneratedIBodyBaseGetModel(NativeCallEnvironment& _nce)
	{
		Rococo::uint8* _sf = _nce.cpu.SF();
		ptrdiff_t _offset = 2 * sizeof(size_t);
		Matrix4x4* model;
		_offset += sizeof(model);
		ReadInput(model, _sf, -_offset);

		Rococo::Components::Generated::IBodyBase* _pObject;
		_offset += sizeof(_pObject);

		ReadInput(_pObject, _sf, -_offset);
		_pObject->GetModel(*model);
	}
	void NativeRococoComponentsGeneratedIBodyBaseSetModel(NativeCallEnvironment& _nce)
	{
		Rococo::uint8* _sf = _nce.cpu.SF();
		ptrdiff_t _offset = 2 * sizeof(size_t);
		Matrix4x4* model;
		_offset += sizeof(model);
		ReadInput(model, _sf, -_offset);

		Rococo::Components::Generated::IBodyBase* _pObject;
		_offset += sizeof(_pObject);

		ReadInput(_pObject, _sf, -_offset);
		_pObject->SetModel(*model);
	}

}

namespace Rococo::Components::Generated
{
	void AddNativeCalls_RococoComponentsGeneratedIBodyBase(Rococo::Script::IPublicScriptSystem& ss, Rococo::Components::Generated::IBodyBase* _nceContext)
	{
		HIDE_COMPILER_WARNINGS(_nceContext);
		const INamespace& ns = ss.AddNativeNamespace("Rococo.Components.Body.Native");
		ss.AddNativeCall(ns, NativeRococoComponentsGeneratedIBodyBaseGetModel, nullptr, "IBodyBaseGetModel (Pointer hObject)(Sys.Maths.Matrix4x4 model) -> ", __FILE__, __LINE__);
		ss.AddNativeCall(ns, NativeRococoComponentsGeneratedIBodyBaseSetModel, nullptr, "IBodyBaseSetModel (Pointer hObject)(Sys.Maths.Matrix4x4 model) -> ", __FILE__, __LINE__);
		AddNativeCalls_RococoComponentsGeneratedIBodyBase_GetAndAdd(ns, ss);
	}
}
