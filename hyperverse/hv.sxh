(config $config.xc) 

(enum Int32
	(as.sxy HV.TriggerType "../content/scripts/hv")
	(as.cpp HV.TriggerType "hv")
	(
		(None 0)
		(Depressed 1)
		(Pressed 2)
		(LevelLoad 3)
	)
)

(enum Int32
	(as.sxy HV.Chemicals.Element "../content/scripts/hv")
	(as.cpp HV.Chemicals.Element "hv")
	(
		(None 0 )
		(Hydrogen 1)
		(Helium 2)
		(Lithium 3)
		(Beryllium 4)
		(Boron 5)
		(Carbon 6)
		(Nitrogen 7)
		(Oxygen 8)
		(Flourine 9)
		(Neon 10)
		(Sodium 11)
		(Magnesium 12)
		(Aluminium 13)
		(Silicon 14)
		(Phosphorous 15)
		(Sulphor 16)
		(Chlorine 17)
		(Argon 18)
		(Potassium 19)
		(Calcium 20)
		(Scandium 21)
		(Titanium 22)
		(Vanadium 23)
		(Chromium 24)
		(Manganese 25)
		(Iron 26)
		(Cobalt 27)
		(Nickel 28)
		(Copper 29)
		(Zinc 30)
		(Gallium 31)
		(Germanium 32)
		(Arsenic 33)
		(Selenium 34)
		(Bromine 35)
		(Krypton 36)
		(Rubidium 37)
		(Stontium 38)
		(Yttrium 39)
		(Zirconium 40)
		(Niobium 41)
		(Molybdenum 42)
		(Technetium 43)
		(Ruthenium 44)
		(Rhodium 45)
		(Palladium 46)
		(Silver 47)
		(Cadmium 48)
		(Indium 49)
		(Tin 50)
		(Antimony 51)
		(Tellurium 52)
		(Iodine 53)
		(Xenon 54)
		(Caesium 55)
		(Barium 56)
		(Lanthanum 57) // Lanthanide series
		(Cerium 58)    
		(Praseodymium 59)
		(Neodymium 60)
		(Promethium 61)
		(Samarium 62)
		(Europium 63)
		(Gadolinium 64)
		(Terbium 65)
		(Dysprosium 66)
		(Holmium 67)
		(Erbium 68)
		(Thulium 69)
		(Ytterbium 70)
		(Lutetium 71)
		(Hafnium 72)
		(Tantalum 73)
		(Tungsten 74)
		(Rhenium 75)
		(Osmium 76)
		(Iridium 77)
		(Platinum 78)
		(Gold 79)
		(Mercury 80)
		(Thallium 81)
		(Lead 82)
		(Bismuth 83)
		(Polonium 84)
		(Astatine 85)
		(Radon 86)
		(Francium 87)
		(Radium 88)
		(Actinium 89)	// Actinide series
		(Thorium 90)
		(Protactinium 91)
		(Uranium 92)
		(Neptunium 93)
		(Plutonium 94)
		(Americium 95)
		(Curium 96)
		(Berkelium 97)
		(Californium 98)
		(Einsteinium 99)
		(Fermium 100)
		(Mendelevium 101)
		(Nobelium 102)
		(Lawrencium 103)
		(Rutherfordium 104)
		(Dubnium 105)
		(Seaborgium 106)
		(Bohrium 107)
		(Hassium 108)
		(Meitnerium 109)
		(Darmstadtium 110)
		(Roentgenium 111)
		(Copernicium 112)
		(Unutrium 113)
		(Flerovium 114)
		(Unupentium 115)
		(Livermorium 116)
		(Unuseptium 117)
		(Ununoctium 118)
	)
)

(enum Int32
	(as.sxy HV.Chemicals.Compounds "../content/scripts/hv")
	(as.cpp HV.Chemicals.Compounds "hv")
	(
		(Oak 1000)
		(Pine 1001)
		(Walnut 1002)
		(Teak 1003)
		(Rosewood 1004)
		(Elm 1005)

		(Polythene 1101)
		(Perspex 1102)

		(Glass 1201)
		(BorosilicateGlass 1202)

		(Ceramic 1301)
		(CermaicFibre 1302)

		(StainlessSteel 1401)
		(CobaltSteel 1402)
		(ChromeSteel 1403)
		(Bronze 1404)
		(Brass 1405)
		(Gunmetal 1406)
		(MedievalSteel 1407)
		(SpringSteel 1408)

		(Cotton 1501)
		(Wool 1502)
		(Silk 1503)
		(SpiderSilk 1504)
		(Polyester 1505)
		(Spandex 1506)
		(Leather 1507)
	)
)

(enum Int32
	(as.sxy HV.EquipmentSlot "../content/scripts/hv")
	(as.cpp HV.EquipmentSlot "hv")
	(
		(None        0x0)
		(Head        0x1)
		(Neck        0x2)
		(Body        0x4)
		(Waist       0x8)
		(Arm        0x10)
		(Hand       0x20)
		(Finger     0x40)
		(Shoulder   0x80)
		(Leg       0x100)
		(Feet      0x200)
		(Outerwear 0x400)
		(Underwear 0x800)
		(Jewelery 0x1000)
	)
)

(interface
	(as.sxy HV.IObjectPrototypeBuilder "../content/scripts/hv")
	(as.cpp HV.IObjectPrototypeBuilder "hv")
	(context factory HV.IObjectPrototypeBuilder)
	(methods
		(AddDynamics (const ObjectDynamics dynamics))
		(AddMeleeData (const MeleeData melee))
		(AddArmourData (const ArmourData armour))
		(AddSlot (EquipmentSlot slot))
		(AddDesc (IString desc))
		(AddShortName (IString shortname))
		(AddMaterial (const MaterialData material))
		(AddIcon (IString pingPath))
		(CloneFrom (IString source))
		(RemoveSlot (EquipmentSlot slot))
		(HasSlot (EquipmentSlot slot) -> (Bool hasSlot))
		(MakeStackable (Int32 maxStackSize))
		(Clear)
		(Commit (IString uniqueName))
	)
	(factory HV.ObjectPrototypeBuilder)
)

(interface
	(as.sxy HV.IObjectPrototypeBase "../content/scripts/hv")
	(as.cpp HV.IObjectPrototypeBase "hv")
	(context factory HV.IObjectPrototypeBase)
	(methods
		(AppendName (IStringBuilder sb))
	)
)

(interface
	(as.sxy HV.IPlayer "../content/scripts/hv")
	(as.cpp HV.IPlayer "hv" "IPlayerBase")
	(context factory HV.IPlayerSupervisor)
	(methods
		(SetPlayerEntity (IdEntity id))
		(GetPlayerEntity -> (IdEntity id))
		(GetInventory -> (IInventoryArray inventory))
	)
	(factory HV.Player (Int32 index))
)

(interface
	(as.sxy HV.IScriptConfig "../content/scripts/hv")
	(as.cpp HV.IScriptConfig "hv" )
	(context factory HV.IScriptConfig)
	(methods
		(GetFloat (IString variableName)(Float32 default)(Float32 minValue)(Float32 maxValue) -> (Float32 value))
		(GetFloatRange (IString variableName)(Vec2 values)(Float32 defaultLeft)(Float32 defaultRight)(Float32 minValue)(Float32 maxValue))
	)
	(factory HV.ScriptConfig)
)

(interface
	(as.sxy HV.ICorridor "../content/scripts/hv")
	(as.cpp HV.ICorridor "hv")
	(context factory HV.ICorridor)
	(methods
		(GetSpan (Vec3 span))
		(IsSloped -> (Bool isSloped))
	)
	(factory HV.Corridor)
)

(interface 
	(as.sxy HV.ISectorAIBuilder "../content/scripts/hv")
	(as.cpp HV.ISectorAIBuilder "hv" )
	(context factory Cosmos)
	(methods
		(ClearTriggers)
		(AddTrigger (IString name))
		(AddAction (IString factoryName))
		(AddActionArgumentI32 (IString argName)(Int32 value))
		(AddActionArgumentF32 (IString argName)(Float32 value))
		(AddActionArgumentString (IString argName)(IString value))
		(AddTag (IString text))
	)

	(factory HV.SectorAIBuilder (Int32 sectorId))
)

(interface
	(as.sxy HV.ISectors "../content/scripts/hv")
	(as.cpp HV.ISectorBuilder "hv" )
	(context factory HV.ISectors)
	(methods
		(AddVertex (Float32 x)(Float32 y))
		(Clear)
		(DisableMeshGeneration)
		(EnableMeshGeneration)
		(GenerateMeshes)
		(CreateFromTemplate (Int32 altitude)(Int32 height)->(Int32 id))
		(SetTemplateWallScript (Bool useScript) (IString scriptName))
		(SetTemplateDoorScript (Bool hasDoor) (IString scriptName))
		(SetTemplateFloorScript (Bool useScript)(IString scriptName))
		(SetTemplateMaterial(IString bodyClass) (MaterialCategory cat)(RGBAb colour)(IString persistentId))	
		(SetWallScriptF32 (IString name)(Float32 value))
		(SetFloorScriptF32 (IString name)(Float32 value))
		(SetCorridorScriptF32 (IString name)(Float32 value))
	)
	(factory HV.SectorBuilder)
)

(enum Int32
	(as.sxy HV.AddItemFlags "../content/scripts/hv")
	(as.cpp HV.AddItemFlags "hv")
	(
		(None 0)
		(AlignEdge 1)
		(RandomHeading 2)
		(RandomPosition 4)
	)
)

		  
(interface
	(as.sxy HV.ISectorLayout "../content/scripts/hv")
	(as.cpp HV.ISectorLayout "hv" )
	(context factory HV.ISectorLayout)
	(methods
		(Exists -> (Bool exists))
		(CountSquares -> (Int32 sqCount))
		(GetSquare (Int32 sqIndex)(AABB2d sq))
		(CeilingQuad (Int32 sqIndex)(QuadVertices q))
		(FloorQuad (Int32 sqIndex)(QuadVertices q))
		(TryGetAsRectangle (Rectf rect)->(Bool success))
		(Altitude (Vec2 altitudes))

		(NumberOfSegments -> (Int32 segCount))
		(NumberOfGaps -> (Int32 gapCount))

		(GetSegment (Int32 segIndex)(WallSegment segment))
		(GetGap (Int32 gapIndex)(GapSegment segment))
		
		(AddSceneryAroundObject (IString mesh)(IdEntity centrePieceId)(const InsertItemSpec iis)(const ObjectCreationSpec ocs)-> (IdEntity id))
		(AddItemToLargestSquare(IString mesh)(Int32 addItemFlags)(const ObjectCreationSpec ocs)-> (IdEntity id))
		(PlaceItemOnUpFacingQuad (IdEntity id)->(Bool wasMoved))
		
		(DeleteScenery)
		(DeleteItemsWithMesh (IString prefix))
		
		(ClearManagedEntities)
		(ManageEntity (IdEntity id))
		(UseUpFacingQuads (IdEntity id)) // Any quads in the scenery that face (0 0 1) marked for utility
	)
)

(interface
	(as.sxy HV.ISectorEnumerator "../content/scripts/hv")
	(as.cpp HV.ISectorEnumerator "hv" )
	(context factory HV.ISectorEnumerator)
	(methods
		(Count -> (Int32 nCount))
		(GetSector (Int32 index) -> (HV.ISectorLayout layout))
		(GetSectorById (Int32 id) -> (HV.ISectorLayout layout))
		(GetSelectedSector -> (HV.ISectorLayout layout))
	)
	(factory HV.SectorEnumerator)
)

(interface
	(as.sxy HV.ISectorComponents "../content/scripts/hv")
	(as.cpp HV.ISectorComponents "hv" )
	(context factory HV.ISectorComponents)
	(methods
		(AddTriangle (const VertexTriangle t))
		(AddPhysicsHull (const Triangle t))
		(BuildComponent (IString componentName))
		(ClearComponents (IString componentName))
		(CompleteComponent (Bool preserveMesh))
		(GetMaterial (MaterialVertexData mat)(IString componentClass))
	)
	(factory HV.SectorComponents)
)

(interface (as.sxy HV.ITriangleList "../content/scripts/hv")
	(as.cpp HV.ITriangleList "hv")
	(context factory HV.ITriangleList)
	(methods
		(AddTriangleByVertices (Vertex a)(Vertex b)(Vertex c))
		(AddTriangle (VertexTriangle abc))
		(AddQuad (Vertex a)(Vertex b)(Vertex c)(Vertex d))
		(CountVertices -> (Int32 vertices))
		(CountTriangles -> (Int32 triangles))
	)
)

// Only available during wall generation
(interface
	(as.sxy HV.ISectorWallTesselator "../content/scripts/hv")
	(as.cpp HV.ISectorWallTesselator "hv")
	(context factory HV.ISectorWallTesselator)
	(methods
		(NumberOfSegments -> (Int32 count))
		(NumberOfGaps -> (Int32 count))
		(GetSegment (Int32 ringIndex)(WallSegment segment))
		(GetGap (Int32 ringIndex)(GapSegment segment))
		(WallTriangles -> (HV.ITriangleList triangles))
		(GetMaterial (MaterialVertexData mat)(IString componentClass))
	)
	(factory HV.SectorWallTesselator)
)

(interface
	(as.sxy HV.ISectorFloorTesselator "../content/scripts/hv")
	(as.cpp HV.ISectorFloorTesselator "hv")
	(context factory HV.ISectorFloorTesselator)
	(methods
		(NumberOfSquares -> (Int32 count))
		(FoundationsExist -> (Bool exists))
		(GetSquare (Int32 index)(AABB2d sq))
		(CeilingQuad (Int32 index)(QuadVertices q))
		(FloorQuad (Int32 index)(QuadVertices q))
		(AddCeilingTriangle (const VertexTriangle t))	
		(AddFloorTriangle (const VertexTriangle t)) // If gloss > 1.0 physics hull else graphics hull
		(GetMaterial (MaterialVertexData mat)(IString componentClass))
		(SetUVScale (Float32 scale))

		(NumberOfSegments -> (Int32 segCount))
		(NumberOfGaps -> (Int32 gapCount))

		(GetSegment (Int32 segIndex)(WallSegment segment))
		(GetGap (Int32 gapIndex)(GapSegment segment))
	)
	(factory HV.SectorFloorTesselator)
)