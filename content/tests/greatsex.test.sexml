// The schemes are quite large, so we move them into their sexml file, which we insert into the GreatSex def here
(Insert
	(Path "!tests/greatsex.scheme.sexml")
)

// The frame element navigates up the owner branch until the frame is found and then sets the attributes specified in the sexml
(Frame
	(Colour.Container.Background Transparent)
)

// The frame element navigates up the owner branch until the frame is found and then sets the attributes of the ClientArea specified in the sexml
(Frame.ClientArea
	(Colour.Container.Background DarkRed)
)

// Define a nice large font, keyed by the id.
(Font 
	(Id TitleFont)
	(Family Arial)
	(Height 72)
	([] Mods Bold)
)

// Options buttons are also quite large.
(Font 
	(Id OptionButtonFont)
	(Family Arial)
	(Height 32)
	([] Mods Bold)
)

(Div
// Panel descriptions serve as comments and also provide debugging information by marking a panel with a text string
	(Panel.Description OutermostDiv)
	
	// TopToBottom layout layouts out children vertically with the first child starting at the top line
	(Panel.Layout TopToBottom)
	
	// Child padding specifies the number of pixels betwen children
	(Panel.ChildPadding 4)
	
	// Expand the panel horizontally and vertically to match the parent.
	(Panel.ExpandH)
	(Panel.ExpandV)
	
	(#Recti Panel.Padding 80 80 80 80)
	:
	
	(Label
		// Search for the (Font... def) at the top of the file with the given Id
		(Font TitleFont)
		
		// Specifies the text string displayed in the label
		(Text "Options")
		
		// Add top and bottom padding, so that when we fit vertically the text does not appear flush with the edges
		(#Recti Panel.Padding 0 0 4 4)
		
		// Fit vertically, changes the size of the label to match the text
		(FitV true)
		
		// Expand the label horizontally to the full span of its parent
		(Panel.ExpandH)
	)
	
	(Div
		(Panel.Description TitleVSpacer)
		(Panel.FixedWidth 40)
		(Panel.FixedHeight 40)
		
		(Colour.Container.TopLeft Transparent)
		(Colour.Container.BottomRight Transparent)
	)
	
	// Divs are divisions with minimal implementation. They are used to layout controls horizontally or vertically and render a background and edge. They do little else
	(Div 
		// Panel descriptions serve as comments and also provide debugging information by marking a panel with a text string
		(Panel.Description CentreFrame)
		
		// TopToBottom layout layouts out children vertically with the first child starting at the top line
		(Panel.Layout LeftToRight)
		
		// Child padding specifies the number of pixels betwen children
		(Panel.ChildPadding 4)
		
		// Expand the panel horizontally and vertically to match the parent.
		(Panel.ExpandH)
		(Panel.ExpandV)
		
		// We dont need any padding here, so set all to zero
		(#Recti Panel.Padding 0 0 0 0)
		:
		
		(Div 
			(Panel.Description OptionsTabs)
			(Panel.Layout TopToBottom)
			(Panel.FixedWidth 280)
			(Panel.ExpandV)
			(Panel.ChildPadding 4)
			(#Recti Panel.Padding 4 0 0 0)
			:
				
			(Button
				(#Recti Panel.Padding 8 0 0 8)
				(Panel.ExpandH)
				(FitTextV)
				(Font OptionButtonFont)
				(Text.Alignment Left)
				(Text Graphics)
			)
			
			(Button
				(#Recti Panel.Padding 8 0 0 8)
				(Panel.ExpandH)
				(FitTextV)
				(Font OptionButtonFont)
				(Text.Alignment Left)
				(Text UI)	
			)
			
			(Button
				(#Recti Panel.Padding 8 0 0 8)
				(Panel.ExpandH)
				(FitTextV)
				(Font OptionButtonFont)
				(Text.Alignment Left)
				(Text Audio)	
			)
			
			(Button
				(#Recti Panel.Padding 8 0 0 8)
				(Panel.ExpandH)
				(FitTextV)
				(Font OptionButtonFont)
				(Text.Alignment Left)
				(Text Gameplay)	
			)
			
			(Button
				(#Recti Panel.Padding 8 0 0 8)
				(Panel.ExpandH)
				(FitTextV)
				(Font OptionButtonFont)
				(Text.Alignment Left)
				(Text Multiplayer)	
			)
		)
		
		(Div
			(Panel.Description "OptionsTabScreen")
			(Panel.Layout LeftToRight)
			(Panel.ExpandH)
			(Panel.ExpandV)
			(Colour.Container.Background DarkBlue)
			:
			
			// A veiwport has a client area that is offset by a scroll bar. The scroll range allows us to navigate to and from any offscreen elements
			(Viewport
			:
				// GameOptions is a procedurally generated list of controls for changing game options
				(GameOptions 
					// The Generate attribute determines which options are used to generate the children
					(Generate GraphicsOptions)
				)
			)
			
			(Div
				(#Vec2i Panel.Span 200 0)
				(Panel.ExpandV)
				(Panel.Layout TopToBottom)
				
				:
				
				(Button
					(#Recti Panel.Padding 8 0 0 8)
					(FitTextV)
					(Panel.ExpandH)
					(Font OptionButtonFont)
					(Text Accept)	
				)
				
				(Button
					(#Recti Panel.Padding 8 0 0 8)
					(FitTextV)
					(Panel.ExpandH)
					(Font OptionButtonFont)
					(Text Revert)
				)
				
				(Button
					(#Recti Panel.Padding 8 0 0 8)
					(FitTextV)
					(Panel.ExpandH)
					(Font OptionButtonFont)
					(Text Back)	
				)
			)
		)
	)
)