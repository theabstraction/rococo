(using Sys.Maths)
(using Sys.Type)
(using MHost.Graphics)
(using MHost)
(using MHost.OS)

(using Sys.Maths.I32)
(using Sys.Maths.F32)

(interface MHost.Graphics.IUIStack
	(AddTopLevelControl (IControl control) (IString name)->)
	(AddChild (IControl control)(IControl parent)(IString name)(Bool clipped)->)
	(BringToTop (IControl control)->)
	(SetVisible (IControl control)(Bool visible)-> )
	(ForEachItemByZOrder (OnUIStackItem callback)->(Bool shouldContinue))
	(RouteMouseEvent (Vec2 cursorPos)(OnUIStackItem callback)->)
)

(archetype MHost.Graphics.OnUIStackItem (UIStackItem item) -> (Bool terminateNow))

(struct UIStackItem
	(IControl control)
	(IEventHandler handler)
	(IString name)
	(Bool isVisible)
	(Bool isClippedByParent)
	(list UIStackItem children)
)

(alias UIStackItem MHost.Graphics.UIStackItem)

(method UIStackItem.Construct -> (construct children ()): 
)

(class UIStack (implements MHost.Graphics.IUIStack)
	(UIStackItem root)
)

(method UIStack.Construct ->  (construct root) : 
	(this.root.name = "~root~")
	(this.root.isVisible = true)
	(this.root.isClippedByParent = true)
)

(factory MHost.Graphics.NewUIStack IUIStack : (construct UIStack))

(method UIStack.AddTopLevelControl (MHost.Graphics.IControl control) (IString name)-> :
	(this.root.children.Append ())
	(node n = this.root.children.Tail)
	(UIStackItem newItem = & n)
	(newItem.control = control)
	(newItem.name = name)
	(newItem.isVisible = true)
	(newItem.handler = (control.GetEventHandler))
	(newItem.isClippedByParent = true)
)

(function ForEachChildByZOrderRecursive (UIStackItem parent)(OnUIStackItem callback)->(Bool terminate):
	(foreach c # parent.children
		(UIStackItem child = & c)
		(if (not child.isClippedByParent)
			(callback child -> terminate)
			(if (terminate) (return))
			(ForEachChildByZOrderRecursive child callback -> terminate)
			(if (terminate) (return))
		)
	)
	(foreach c # parent.children
		(UIStackItem child = & c)
		(if (child.isClippedByParent)
			(callback child -> terminate)
			(if (terminate) (return))
			(ForEachChildByZOrderRecursive child callback -> terminate)
			(if (terminate) (return))
		)
	)
)

(method UIStack.ForEachItemByZOrder (OnUIStackItem callback)->(Bool terminate):
	(callback this.root -> terminate)
	
	(if (not terminate) (ForEachChildByZOrderRecursive this.root callback -> terminate))
)

(method UIStack.BringToTop (IControl control)-> :
	(BringChildToTop origin.root control)
)

(function BringChildToTop (UIStackItem parent)(IControl control) -> (Bool terminateNow) :
	(foreach c # parent.children
		(UIStackItem child = & c)
		(if (child.control == control)
			(UIStackItem clone)
			(clone = child)
			(parent.items.Append clone)
			(c.Pop)
			(terminateNow = true)
			(break)
		else	
			(BringChildToTop child control -> terminateNow)
			(if terminateNow (break))
		)
	)
)

(function FindItemAndExecute (UIStackItem origin)(IControl target) (OnUIStackItem callback)->(Bool terminateNow):
	(if (item.control == target)
		(callback item -> terminateNow)
	else
		(foreach c # item.children
			(UIStackItem child = & c)
			(FindItemAndExecute child target callback -> terminateNow)
			(if terminateNow (break))
		)
	)
)

(method UIStack.SetVisible (IControl control) (Bool isVisible)-> :
	(OnUIStackItem q =
		(closure (UIStackItem item)->(Bool terminateNow):
			(item.isVisible = isVisible)
			(termianteNow = true)
		)
	)
	
	(FindItemAndExecute this.root control q -> terminateNow)
)

(method UIStack.AddChild (IControl control)(IControl parent)(IString name)(Bool clipped)-> :
	(OnUIStackItem q =
		(closure (UIStackItem item)->(Bool terminateNow):
			(UIStackItem newChild)
			(newChild.control = control)
			(newChild.name = name)
			(newChild.isVisible = true)
			(newChild.isClippedByParent = clipped)
			(newChild.handler = (control.GetUIEventHandler))
			(terminateNow = true)
			(item.children.Append newChild)
		)
	)
	
	(FindItemAndExecute this.root control q -> terminateNow)
)

(function RouteMouseEventRecursive (UIStackItem item)(Vec2 pos)(OnUIStackItem callback)-> (Bool terminate):
	(terminate = false)
	(Rectf rect)
	(item.control.GetRect rect)
	(if (IsPointInRect pos rect) 
		(callback item -> terminate)
		(if (not terminate) 
			(foreach c # item.children
				(UIStackItem child = & c)
				(RouteMouseEventRecursive child pos callback -> terminate)
				(if terminate (break))
			)
		)
	else // The cursor event did not occur in the parent rect, but the children may be floating, outside of the parent rect, so check them
		(foreach c # item.children
			(UIStackItem child = & c)
			(if (not child.isClippedByParent)
				(RouteMouseEventRecursive child pos callback -> terminate)
				(if terminate (break))
			)
		)
	)
)

(method UIStack.RouteMouseEvent (Vec2 cursorPos)(OnUIStackItem callback) -> :
	(RouteMouseEventRecursive this.root cursorPos callback)
)

(function RenderTree (IUIStack tree)(IGui gui)-> :
	(OnUIStackItem renderControl = 
		(closure (UIStackItem item)->(Bool terminate):
			(item.control.Render gui)
			(terminate = false)
		)
	)
	(tree.ForEachItemByZOrder renderControl)
)

(alias RenderTree MHost.Graphics.RenderTree)


