(' #include 
	"!scripts/mhost/mplat.types.sxy"
	"!scripts/mhost/mhost.sxh.sxy"
	"!scripts/mplat.sxh.sxy"
	"!scripts/types.sxy"
	"!scripts/mhost/mhost.include.sxy"
	"!scripts/mhost/widgets/fonts.sxy"
	"!scripts/mhost/widgets/menu.vertical.sxy"
	"!scripts/mhost/widgets/widgets.sxy"
)

(namespace EntryPoint)
	(alias Main EntryPoint.Main)
	
(using Sys)
(using Sys.Maths)
(using Sys.Type)
(using Sys.MPlat)
(using Sys.Random)
(using Sys.Type.Strings)
(using MHost)
(using MHost.OS)
(using MHost.Graphics)
(using Rococo)
(using Rococo.Graphics)
(using Rococo.Audio)

(using Sys.Maths.F32)
(using Sys.Maths.I32)

(namespace RPG)
(namespace MHost.Graphics)

(using RPG)

(struct EventArgs
)

(interface RPG.IInputThread
	(extends Sys.ICoroutine)
	(SetScreen (IScreen screen)->)
)

(class GuiInputThread 
	(implements RPG.IInputThread)
	(IEngine engine)
	(IScreen activeScreen)
)

(method GuiInputThread.SetScreen (IScreen screen)-> :
	(this.activeScreen = screen)
)

(method GuiInputThread.Construct (IEngine engine) : 
	(this.engine = engine)
)

(factory RPG.NewGuiInputThread IInputThread (IEngine engine):
	(construct GuiInputThread engine)
)

(method GuiInputThread.Run -> :
	(IKeyboard keyboard (Keyboard))
/*	(Int32 leftKey = (keyboard.GetVKeyFromName "A"))
	(Int32 rightKey = (keyboard.GetVKeyFromName "D"))
	(Int32 fireKey = (keyboard.GetVKeyFromName "SPACEBAR"))
	(Int32 upKey = (keyboard.GetVKeyFromName "W"))
	(Int32 downKey = (keyboard.GetVKeyFromName "S")) */
			
	(while this.engine.IsRunning
		(KeyState keys)
		(this.engine.PollKeyState keys)
		
		(yield 1000)
	)
)

(interface RPG.IWorld
	(Advance ->)
	(RenderGui (IGui gui)-> )
)

(class World 
	(implements IWorld)
	(implements ICoroutine)
	
	(IEngine engine)
	(ILegacySoundControl sound)
	(Vec2 screenSpan)
)

(method World.Construct (IEngine engine) (ILegacySoundControl sound) -> :
	(this.engine = engine)
	(this.sound = sound)
)

(factory RPG.NewWorld IWorld (IEngine engine) (ILegacySoundControl sound) : 
	(construct World engine sound)
)

(method World.Advance  -> :
)

(method World.RenderGui (IGui g) -> :
	(g.GetScreenSpan this.screenSpan)
)

(method World.Run -> :
	(while this.engine.IsRunning
		(this.Advance)
		(yield 1000)
	)
)

(interface RPG.IScreen (extends MHost.IUIEventHandler)
	(RenderGui (IGui g) ->)
)

(struct CommandButton
	(Rectf rect)
	(IString text)
)

(class OpeningScreen 
	(implements IScreen)
	(IEngine engine) // The CPP side of flow control
	
	(Vec2 screenSpan)
	(Vec2 cursorPos)
	
	(IMenu menu)
)

(method OpeningScreen.Construct (IEngine engine) -> : 
	(this.engine = engine)
	
	(this.menu = (NewVerticalMenu 10))
	(this.menu.SetStyle 0 4 "Tahoma")
	
	(IWidgetContext nulWC)
	(this.menu.AddTextItem "New Game" nulWC) 				// 0
	(this.menu.AddTextItem "Recruit Adventurerer" nulWC)	// 1
	(this.menu.AddTextItem "Options" nulWC)					// 2
	(this.menu.AddTextItem "Credits" nulWC)					// 3
	(this.menu.AddTextItem "Exit Game" nulWC)				// 4
)

(method OpeningScreen.Run -> :
	(while this.engine.IsRunning
		(yield 1000)
	)
)

(function Eq (Vec2 a)(Vec2 b)->(Bool match):
	(match = ((a.x == b.x) and (a.y == b.y)))
)

(function ShowCursor (IGui g)(Vec2 cursorPos) -> :
	(IStringBuilder sb (StringBuilder 64))
	(sb.SetFormat 0 0 false false)
	(#build sb "(" cursorPos.x ", " cursorPos.y ")")
	
	(Rectf cursorRect = 10 10 300 100)
	(g.DrawText cursorRect 0 sb 2 0xFFFFFFFF)
)

(method OpeningScreen.OnMouseDown (Int32 button) (Float32 x)(Float32 y) -> :
	(if (button == 0) 
		(Int32 index = (this.menu.ClickAt x y))
		(if (index == 4)
			(this.engine.Shutdown)
		)
	)
)

(method OpeningScreen.OnMouseUp (Int32 button) (Float32 x)(Float32 y) -> :

)

(method OpeningScreen.OnWheel (Int32 spin) -> :

)

(method OpeningScreen.RenderGui (IGui g) -> :
	(Vec2 screenSpan)
	(g.GetScreenSpan screenSpan)
	
	(Rectf menuRect)
	(MHost.Graphics.GetCentredRect screenSpan 1100 620 menuRect)
	
	(this.menu.RenderToFixedRect g menuRect)
)

(factory RPG.NewOpeningScreen IScreen (IEngine engine) : 
	(construct OpeningScreen engine)
)

(function Main (Int32 id) -> (Int32 exitCode):
	(ISprites sprites (Sprites))
	(sprites.AddEachSpriteInDirectory "!textures/mhost/rpg")
	(sprites.LoadAllSprites)
	
	(IEngine engine (Engine))
	(ILegacySoundControl sound (Rococo.Audio.LegacySoundControl))
	
	(IWorld world (NewWorld engine sound))
	
	(ICoroutineControl coroutines (Coroutines))
	
	(IInputThread guiThread (NewGuiInputThread engine))
	(coroutines.Add guiThread)
	
	(cast world -> ICoroutine worldThread)
//	(coroutines.Add worldThread)
	
	(IScreen openingScreen (NewOpeningScreen engine))

	(guiThread.SetScreen openingScreen)
	
	(while engine.IsRunning
		(while (coroutines.Continue > 0))
		
		(GuiPopulator p =
			(closure (IGui gui) -> : 
				(openingScreen.RenderGui gui)
			)
		)
		
		(MouseEvent ev)
		(while (engine.GetNextMouseEvent ev)
			(TranslateMouseEvent ev openingScreen)
		)
		
		(engine.Render p)	
		(engine.YieldForSystemMessages 5)
	)
)
