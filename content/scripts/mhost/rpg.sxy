(' #include 
	"!scripts/mhost/mplat.types.sxy"
	"!scripts/mhost/mhost.sxh.sxy"
	"!scripts/mplat.sxh.sxy"
	"!scripts/types.sxy"
	"!scripts/mhost/mhost.include.sxy"
)

(namespace EntryPoint)
	(alias Main EntryPoint.Main)
	
(using Sys)
(using Sys.Maths)
(using Sys.Type)
(using Sys.MPlat)
(using Sys.Random)
(using Sys.Type.Strings)
(using MHost)
(using MHost.OS)
(using MHost.Graphics)
(using Rococo)
(using Rococo.Graphics)
(using Rococo.Audio)

(using Sys.Maths.F32)
(using Sys.Maths.I32)

(namespace RPG)
(namespace MHost.Graphics)

(using RPG)

(interface MHost.Graphics.IWidgetContext
	(Exists -> (Bool exists))
)

(interface MHost.Graphics.IMenu
	(AddTextItem (IString text)(IWidgetContext wc)->(Int32 id))
	(SetColourScheme (QuadColour itemLow)(QuadColour itemHigh)(QuadColour bkLow)(QuadColour bkHigh)->)
	(RenderToFixedRect (IGui gui)(Rectf rect)->)
)

(struct MenuItem
	(IString text)
	(Rectf rect)
	(IWidgetContext wc)
)

(struct QuadColour
	(Int32 fontColour)
	(Int32 backColour)
	(Int32 tl tr bl br)
)

(function UseDefaultColourScheme (QuadColour low)(QuadColour high)-> :
	(low  = 0xFFA0A0A0 0xFF000000 0xFF606060 0xFF808080 0xFFA0A0A0 0xFFC0C0C0)
	(high = 0xFFFFFFFF 0xFF000000 0xFF808080 0xFFA0A0A0 0xFFC0C0C0 0xFFFFFFFF)
)

(class VerticalMenu
	(implements IMenu)
	(array MenuItem items)
	(Int32 alignment)
	(Int32 fontIndex)
	(QuadColour coloursLow)
	(QuadColour coloursHigh)
	(QuadColour bkLow)
	(QuadColour bkHigh)
	(Rectf outerRect)
	(Vec2 cursorPos)
	(IString fontFamily)
)

(method VerticalMenu.Construct (Int32 textAlignment)(Int32 maxEntries)(IString fontFamily) -> (construct items maxEntries) :
	(this.alignment = textAlignment)
	(this.fontIndex = 0)
	(this.fontFamily = fontFamily)
	(UseDefaultColourScheme this.coloursLow this.coloursHigh)
	(UseDefaultColourScheme this.bkLow this.bkHigh)
)

(method VerticalMenu.AddTextItem (IString text)(IWidgetContext wc)->(Int32 id):
	(MenuItem item = text (0 0 0 0) wc)
	(this.items.Push item)
)

(method VerticalMenu.SetColourScheme (QuadColour low)(QuadColour high)(QuadColour bkLow)(QuadColour bkHigh)-> :
	(this.coloursLow = low)
	(this.coloursHigh = high)
	(this.bkLow = bkLow)
	(this.bkHigh = bkHigh)
) 

(factory MHost.NewVerticalMenu IMenu (Int32 textAlignment)(Int32 maxEntries)(IString fontFamily) :
	(construct VerticalMenu textAlignment maxEntries fontFamily)
)

(function EqRectfRectf (Rectf a)(Rectf b)->(Bool areEqual):
	(areEqual = (((a.left == b.left) and (a.right == b.right)) and ((a.top == b.top) and (a.bottom == b.bottom))))
)

(function GetSpanRectf (Rectf rect)(Vec2 span)-> :
	(span.x = (rect.right - rect.left))
	(span.y = (rect.bottom - rect.top))
)

// Assumes fonts are ordered by size, so that the tallest fonts appear with the smallest font index.
(function GetLargestFontOfFamilyLessThanHeight (IGui gui)(IString family)(Float32 height)->(Int32 fontIndex):
	(IStringBuilder fontFamily (StringBuilder 128))
	
	(trip)
	(Int32 nFonts = gui.GetNumberOfFonts)
	
	(#for (Int32 i = 0)(i < nFonts)(i += 1)
		(fontFamily.Clear)
		(FontDesc fd)
		(gui.GetFontDescription i fontFamily fd)
		
		(if ((IsExactMatch family fontFamily) and (fd.height < height))
			(fontIndex = i)
			(break)
		)
	)
)

(function LayoutFixedRect (VerticalMenu menu)(Rectf rect)(IGui g)-> :
	(Vec2 span)
	(GetSpanRectf rect span)
	
	(Int32 nItems = (menu.items.Length))
	(if (nItems == 0) (return))

	(Float32 nItemsF32 = (Sys.Maths.I32.ToFloat32 nItems))
	
	(Float32 pxHeightPerRow = (Floor (span.y / nItemsF32)))
	
	(Float32 minHeight = (pxHeightPerRow - 2))
	
	(menu.fontIndex = (GetLargestFontOfFamilyLessThanHeight g menu.fontFamily minHeight))
		
	(if (menu.fontIndex == -1)
		(menu.fontIndex = (GetLargestFontOfFamilyLessThanHeight g "Courier New" minHeight))
	)
	
	(if (menu.fontIndex == -1)
		(IStringBuilder msg (StringBuilder 256))
		(msg.SetFormat 0 0 false false)
		(#build msg "LayoutFixedRect(VerticamMenu...): could not find a font small enough for the job&n")
		(#build msg "Rect: (" rect.left " " rect.top " " rect.right " " rect.bottom ")&n")
		(#build msg "MinHeight: " minHeight " pixels.&n")
		(Sys.Throw 0 msg)
	)
	
	(IStringBuilder unused (StringBuilder 128))
	(FontDesc fd)
	(g.GetFontDescription menu.fontIndex unused fd)
	
	(Float32 interalYSpan = (fd.height * nItemsF32))
	
	(Float32 idealButtonHeight = (2.0 * fd.height))
	
	(Float32 buttonYHeight)
	(Float32 buttonYBorder)
	
	(if (idealButtonHeight < pxHeightPerRow)
		(buttonYHeight = pxHeightPerRow)
		(buttonYBorder = 1)
	else
		(buttonYHeight = idealButtonHeight)
		(Float32 idealTotalYSpan = (idealButtonHeight * nItemsF32))
		(Float32 borderYSpan = (span.y - idealTotalYSpan))
		(buttonYBorder = (0.5 * (borderYSpan / (nItemsF32 + 1))))
	)
	
	(Float32 y = (rect.top + buttonYBorder))
	
	(trip)
	
	(foreach item # menu.items
		(item.rect.left = (rect.left + buttonYBorder))
		(item.rect.right = (rect.right - buttonYBorder))
		(item.rect.top = y)
		(item.rect.bottom = (y + buttonYHeight))
		(y += buttonYHeight)
		(y += buttonYBorder)
	)
)

(method VerticalMenu.RenderToFixedRect (IGui g)(Rectf outerRect) -> :
	(if (not (EqRectfRectf outerRect this.outerRect))
		(LayoutFixedRect this outerRect g)
	)
	
	(g.GetCursorPos this.cursorPos)
	
	(QuadColour colours)
	
	(if (IsPointInRect this.cursorPos outerRect)
		(colours = this.bkHigh)
	else	
		(colours = this.bkLow)
	)
	
	(g.FillRect outerRect colours.backColour)
	(g.DrawBorder outerRect 1 colours.tl colours.tr colours.bl colours.br)
	
	(foreach item # this.items
		(if (IsPointInRect this.cursorPos item.rect)
			(colours = this.coloursHigh)
		else	
			(colours = this.coloursLow)
		)
		
		(g.DrawBorder item.rect 1 colours.tl colours.tr colours.bl colours.br)
		(g.DrawText item.rect this.alignment item.text 0 colours.fontColour)
	)
	
	(this.outerRect = outerRect)
)

(interface RPG.IInputThread
	(extends Sys.ICoroutine)
	(SetScreen (IScreen screen)->)
)

(class GuiInputThread 
	(implements RPG.IInputThread)
	(IEngine engine)
	(IScreen activeScreen)
)

(class Script
	(defines RPG.IScript)
	(Bool isRunning)
)

(method Script.Construct -> : (this.isRunning = true))
(method Script.IsRunning -> (Bool isRunning): (isRunning = this.isRunning))
(method Script.Shutdown -> : (this.isRunning = false))

(factory RPG.NewScript IScript : (construct Script))

(interface RPG.IEventHandler
	(OnLeftMouseUp ->)
)

(method GuiInputThread.SetScreen (IScreen screen)-> :
	(this.activeScreen = screen)
)

(method GuiInputThread.Construct (IEngine engine) : 
	(this.engine = engine)
)

(factory RPG.NewGuiInputThread IInputThread (IEngine engine):
	(construct GuiInputThread engine)
)

(method GuiInputThread.Run -> :
	(IKeyboard keyboard (Keyboard))
/*	(Int32 leftKey = (keyboard.GetVKeyFromName "A"))
	(Int32 rightKey = (keyboard.GetVKeyFromName "D"))
	(Int32 fireKey = (keyboard.GetVKeyFromName "SPACEBAR"))
	(Int32 upKey = (keyboard.GetVKeyFromName "W"))
	(Int32 downKey = (keyboard.GetVKeyFromName "S")) */
	
	(while this.engine.IsRunning
		(KeyState keys)
		(this.engine.PollKeyState keys)
		
		(MouseEvent ev)
		(while (this.engine.GetNextMouseEvent ev)
			(trip)
			(this.activeScreen.OnMouse ev)
		)
		
		(yield 10000)
	)
)

(interface RPG.IWorld
	(Advance ->)
	(RenderGui (IGui gui)-> )
)

(class World 
	(implements IWorld)
	(implements ICoroutine)
	
	(IEngine engine)
	(ILegacySoundControl sound)
	(Vec2 screenSpan)
)

(method World.Construct (IEngine engine) (ILegacySoundControl sound) -> :
	(this.engine = engine)
	(this.sound = sound)
)

(factory RPG.NewWorld IWorld (IEngine engine) (ILegacySoundControl sound) : 
	(construct World engine sound)
)

(method World.Advance  -> :
)

(method World.RenderGui (IGui g) -> :
	(g.GetScreenSpan this.screenSpan)
)

(method World.Run -> :
	(while this.engine.IsRunning
		(this.Advance)
		(yield 1000)
	)
)

(interface RPG.IScreen (extends Sys.ICoroutine)
	(RenderGui (IGui g) ->)
	(OnMouse (MouseEvent me)->)
)

(struct CommandButton
	(Rectf rect)
	(IString text)
)

(class OpeningScreen 
	(implements IScreen)
	(IEngine engine) // The CPP side of flow control
	(IScript script) // The Sexy side of flow control
	
	(Vec2 screenSpan)
	(Vec2 cursorPos)
	
	(IMenu menu)
)

(method OpeningScreen.Construct (IEngine engine) (IScript script)-> : 
	(this.engine = engine)
	(this.script = script)
	
	(this.menu = (NewVerticalMenu 0 10 "Tahoma"))
	
	(IWidgetContext nulWC)
	(this.menu.AddTextItem "New Game" nulWC)
	(this.menu.AddTextItem "Recruit Adventurerer" nulWC)
	(this.menu.AddTextItem "Options" nulWC)
	(this.menu.AddTextItem "Credits" nulWC)
	(this.menu.AddTextItem "Exit Game" nulWC)
)

(method OpeningScreen.Run -> :
	(while this.engine.IsRunning
		(yield 1000)
	)
)

(function Eq (Vec2 a)(Vec2 b)->(Bool match):
	(match = ((a.x == b.x) and (a.y == b.y)))
)

(function GetCentredRect (Vec2 screenSpan) (Float32 dx)(Float32 dy)(Rectf r)-> :
	(Vec2 rectSpan = dx dy)
	(Vec2 border = screenSpan - rectSpan)
	(Vec2 halfBorder = border * 0.5)
	(r.left = halfBorder.x)
	(r.top = halfBorder.y)
	(r.right = (screenSpan.x - halfBorder.x))
	(r.bottom = (screenSpan.y - halfBorder.y))
)

(function CentreHorizontally (Rectf rect)(Rectf container)-> :
	(Float32 containerDX = (container.right - container.left))
	(Float32 childDX = (rect.right - rect.left))
	(Float32 xBorder = ((containerDX - childDX) * 0.5))
	(rect.left = (container.left + xBorder))
	(rect.right = (container.right - xBorder))
)

(function IsPointInRect (Vec2 point)(Rectf rect)->(Bool result):
	(result = false)
	(if ((point.x > rect.left) and (point.x < rect.right))
		(if ((point.y > rect.top) and (point.y < rect.bottom))
			(result = true)
		)
	)
)

(function ShowCursor (IGui g) -> :
	(IStringBuilder sb (StringBuilder 64))
	(sb.SetFormat 0 0 false false)
	(#build sb "(" cursorPos.x ", " cursorPos.y ")")
	
	(Rectf cursorRect = 10 10 300 100)
	(g.DrawText cursorRect 0 sb 2 0xFFFFFFFF)
)

(method OpeningScreen.OnMouse (MouseEvent me)-> :
	(if (HasFlags me.buttons 0x20000) // Left button up
		(trip)
	)
)

(method OpeningScreen.RenderGui (IGui g) -> :
	(Vec2 screenSpan)
	(g.GetScreenSpan screenSpan)
	
	(Rectf menuRect)
	(GetCentredRect screenSpan 1100 620 menuRect)
	
	(this.menu.RenderToFixedRect g menuRect)

	// (ShowCursor g)
)

(factory RPG.NewOpeningScreen IScreen (IEngine engine) (IScript script): 
	(construct OpeningScreen engine script)
)

(function Main (Int32 id) -> (Int32 exitCode):
	(ISprites sprites (Sprites))
	(sprites.AddEachSpriteInDirectory "!textures/mhost/rpg")
	(sprites.LoadAllSprites)
	
	(IEngine engine (Engine))
	(ILegacySoundControl sound (Rococo.Audio.LegacySoundControl))
	
	(IWorld world (NewWorld engine sound))
	
	(ICoroutineControl coroutines (Coroutines))
	
	(IInputThread guiThread (NewGuiInputThread engine))
	(coroutines.Add guiThread)
	
	(cast world -> ICoroutine worldThread)
//	(coroutines.Add worldThread)

	(IScript script (NewScript))
	
	(IScreen openingScreen (NewOpeningScreen engine script))
//	(coroutines.Add openingScreen)

	(guiThread.SetScreen openingScreen)
	
	(while ((engine.IsRunning) and (script.IsRunning))
		(while (coroutines.Continue > 0))
		
		(GuiPopulator p =
			(closure (IGui gui) -> : 
				(openingScreen.RenderGui gui)
			)
		)
		
		(engine.Render p)	
		(engine.YieldForSystemMessages 5)
	)
)
