// 3d test

(' #import (mhost "MHost"))

(' #include
	"!scripts/mhost/t3d/t3d_world.sxy"
	"!scripts/mhost/t3d/t3d_config.sxy"
	"!scripts/mhost/t3d/gui/t3d.menus.sxy"
	"!scripts/mhost/t3d/gui/t3d.input.thread.sxy"
	"!scripts/mhost/t3d/strings/t3d.strings.sxy"	
	"!scripts/mhost/t3d/objects/t3d.rigs.sxy"
	"!scripts/mhost/t3d/objects/t3d.objects.assorted.sxy"
)

(namespace EntryPoint)
	(alias Main EntryPoint.Main)

(using Sys)
(using Sys.Maths)
(using Sys.Maths.F32)
(using Sys.Type)
(using Sys.Random)
(using Sys.Type.Strings)

(using MPlat)
(using MHost)
(using MHost.GuiTypes)
(using MHost.OS)
(using MHost.Graphics)
(using MHost.Events)
(using MHost.Geometry)

(using Rococo)
(using Rococo.Graphics)
(using Rococo.Entities)
(using Rococo.Audio)

(using Sys.Geometry.F32)
(using Sys.Maths.I32)

(namespace T3D)
(using T3D)

(struct CommandButton
	(Rectf rect)
	(IString text)
)

(class GameBundle (defines T3D.IBundle)
	(ISpriteBuilder spriteBuilder)
	(IEngine engine)
	(T3D.Gui.IInputThread inputThread)
	(ICoroutineControl coroutines)
	(IWorld world)
)

(method GameBundle.Construct : 
	(this.spriteBuilder = (SpriteBuilder))	
	(this.engine = (Engine))
	(this.coroutines = (Coroutines))
	(this.world = (NewWorld))
	(this.inputThread = (T3D.Gui.NewGuiInputThread this.engine this.world))
	(this.coroutines.Add this.inputThread)
)

(method GameBundle.UIControl -> (IUIControl uiControl): 
	(uiControl = this.inputThread.UIControl)
)

(method GameBundle.Engine -> (IEngine engine):
	(engine = this.engine)
)

(method GameBundle.AddCoroutine -> (ICoroutine coroutine):
	(coroutines.Add coroutine)
)

(factory T3D.NewGameBundle T3D.IBundle : (construct GameBundle))

(function GetWorldToCameraQuat (WorldOrientation world)(Quat q)-> :
	/*
	(struct WorldOrientation
		(Degrees bearing) // 0 = North, 90 = East, 180 = South, 270 = West
		(Degrees elevation) // 0 = forward, 90 = up, -90 = down
		(Degrees roll) // anti-clockwise roll about direction vector
	)
	*/
	
	/* A world to camera quaternion gives the rotation and roll required to map a direction and roll
	defined in a WorldOrientation vector to an object facing -ve z, with x to the right and y up */
	
	// Consider the case of three rotations mapping -z to a direction N. The inverse transformation
	// of three rotations is three inverse rotations in reverse order. e.g (Rx.Ry.Rz)' = Rz'.Ry'.Rx'
	
	(Degrees invElevation = (-90 - world.elevation))
	
	(Quat invElevationYQ)
	(GetRotationQuat invElevation 1 0 0 invElevationYQ)
	
	(Degrees invBearing = (0 - world.bearing))
	
	(Degrees thetaXY = (0 - invBearing))
	
	(Quat invBearingZQ)
	(GetRotationQuat thetaXY 0 0 1 invBearingZQ)
	
	(Quat zy = invBearingZQ * invElevationYQ)

	(q = zy)
)

(function AdvanceCoroutines (ICoroutineControl coroutines)-> :
	(while (coroutines.Continue > 0)
		// Some coroutine did something interesting
	)

	// Either there are no coroutines or all are in a wait state
)

(function RenderWorldThenUI (IWorld world)(IEngine engine) -> :
	(GuiPopulator overlay =
			(closure (IGui gui) -> : 
				(world.RenderGui gui)
			)
	)

	(engine.Render overlay)	
)

(method GameBundle.Run -> :
	(ISceneBuilder scene (SceneBuilder))
	(ICamera camera (Camera))
	(camera.SetRHProjection 60 0.1 1000.0)
	
	(IWorld world = this.world)
	
	(IAudio audio (GetAudio))
	
	(AudioSource3D source)
	(source.priority = 1)
	(source.volume = 1.0)
	(source.position = 10 0 2)
	(source.dopplerVelocity = 0 0 0)
		
	(IMaterialBuilder matBuilder (MaterialBuilder))
	(Int64 cubeId = (matBuilder.CreateCubeTexture "!textures/t3d/skybox/YokohamaSmall/" "jpg"))
	(scene.SetSkyBox cubeId)
	(scene.SetEnvironmentMap cubeId)

	
	(while this.engine.IsRunning
		(AdvanceCoroutines this.coroutines)
		
		(Vec3 playerEyePosition)
		(world.GetPlayerEyePos playerEyePosition)
		(camera.SetPosition playerEyePosition)
		
		(WorldOrientation cameraOrientation)
		(world.GetCameraOrientation cameraOrientation)
		
		(Quat cameraQuat)
		(GetWorldToCameraQuat cameraOrientation cameraQuat)
		
		(camera.SetOrientation cameraQuat)
		
		(RenderWorldThenUI this.world this.engine)

		(this.engine.YieldForSystemMessages 5)
	)
	
	(this.coroutines.ReleaseAll)
)

(function Main (Int32 id) -> (Int32 exitCode):
	(Sys.Random.Seed 0)
	(IBundle bundle (NewGameBundle))
	(bundle.Run)
)
