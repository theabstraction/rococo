// 3d test

(' #import (mhost "MHost"))

(' #include
	"!scripts/mhost/t3d/t3d_world.sxy"
	"!scripts/mhost/t3d/t3d_config.sxy"
)

(namespace EntryPoint)
	(alias Main EntryPoint.Main)

(using Sys)
(using Sys.Maths)
(using Sys.Maths.F32)
(using Sys.Type)
(using Sys.Random)
(using Sys.Type.Strings)

(using MPlat)
(using MHost)
(using MHost.GuiTypes)
(using MHost.OS)
(using MHost.Graphics)
(using MHost.Events)
(using MHost.Geometry)

(using Rococo)
(using Rococo.Graphics)
(using Rococo.Entities)
(using Rococo.Audio)

(using Sys.Geometry.F32)
(using Sys.Maths.I32)

(namespace T3D)
(using T3D)

(interface T3D.IInputThread (attribute essential)
	(extends Sys.ICoroutine)
)

(interface T3D.IWorld (attribute essential)
	(RenderGui (IGui g)->)
	(UpdateMouseLook (Vec2 delta)->)
	(GetCameraOrientation (WorldOrientation cameraOrientation)->)
	(GetPlayerEyePos (Vec3 pos)-> )
	(SetPlayerEyePos (Vec3 pos)-> )
	(SetPlayerMoveIntent (Float32 straffe)(Float32 forward)->)
)

(struct ButtonArgs
	(Int64 unused)
)

(interface MHost.Events.IOverlayEventHandler (attribute dispatch)
	(BuildMenus -> )
)

(class OverlayButtonHandler
	(implements MHost.Events.IOverlayEventHandler)
	(IWorld world)
)

(method OverlayButtonHandler.Construct (IWorld world) : 
	(this.world = world)
)

(method OverlayButtonHandler.OnObjectsCreateBottleClicked (ButtonArgs args) -> :
)

// Example: SysGeoff goes in and Sys.Geoff goes out
(function ConvertPascalCaseToNamespace (IString pascalCase)(IStringBuilder nsBuilder) -> :
	(Bool isFirstCharCapital = (Sys.Type.Strings.IsUpperCase (pascalCase 0)))
	(if (not isFirstCharCapital)
		(
			(#path msg "ConvertPascalCaseToNamespace(arg =" pascalCase ", ...) arg did not begin with a capital letter")
			(Sys.Throw 0 msg)
		)
	)
	
	(nsBuilder.AppendChar (pascalCase 0))
	
	(Bool first = true)
	
	(for (Int32 i = 1) (i < pascalCase.Length)(i += 1)
		(Int32 c = (pascalCase i))
		(if (Sys.Type.Strings.IsUpperCase c)
			(nsBuilder ".")
		)
		
		(nsBuilder.AppendChar c)		
	)
)

(method OverlayButtonHandler.BuildMenus -> :
	(IGuiOverlay overlay (MHost.GuiOverlay))
	(overlay.ClearMenus)
	
	(Sys.Reflection.IStructure t = typeof this)
	(Int32 nMethods = t.GetMethodCount)
	
	(Sys.Type.IStringBuilder methodName = Sys.Type.NewTokenBuilder)
	(Sys.Type.IStringBuilder buttonName = Sys.Type.NewTokenBuilder)
	(Sys.Type.IStringBuilder methodPascalCase = Sys.Type.NewTokenBuilder)
	
	(for (Int32 i = 0)(i < nMethods)(i += 1)
		(methodName.Clear)
		(buttonName.Clear)
		(t.AppendMethodName methodName i)
		(Int32 dotOnPos = (Sys.Type.Strings.FindLeftNoCase methodName 0  ".On"))		
		(if (dotOnPos > 0)
			(dotOnPos += 3)
			(Int32 clickedPos = (Sys.Type.Strings.FindRightWithCase methodName dotOnPos 10000 "Clicked"))
			(if (clickedPos > 0)
				(methodPascalCase.AppendSubstring methodName dotOnPos (clickedPos - dotOnPos))
				(ConvertPascalCaseToNamespace methodPascalCase buttonName) 
				(dotOnPos -= 2)
				(methodName.StripLeft dotOnPos)
				(overlay.AddMenu methodName (Sys.Maths.I32.ToInt64 i) buttonName)
			)
		)	
	)
)

(factory T3D.NewOverlayButtonHandler MHost.Events.IOverlayEventHandler (IWorld world):
	(construct OverlayButtonHandler world)
)

(class GuiInputThread 
	(implements T3D.IInputThread)
	(IEngine engine)
	(IScreen activeScreen)
	(IEventHandler modalSink)
	(IKeyboard keyboard)
	(IWorld world)
	(IOverlayEventHandler overlayHandler)
	(Bool isViewLocked)
)

(method GuiInputThread.Destruct -> :
)

(method GuiInputThread.CaptureMouse (IEventHandler handler)-> :
	(this.modalSink = handler) 
	(this.engine.CaptureMouse)
)

(method GuiInputThread.ReleaseMouse (IEventHandler handler)-> :
	(IEventHandler nullHandler)
	(this.modalSink = nullHandler)
	(this.engine.ReleaseMouse)
)

(method GuiInputThread.Construct (IEngine engine)(IWorld world) : 
	(this.engine = engine)
	(this.world = world)
	(this.isViewLocked = false)
	(MHost.Events.IOverlayEventHandler overlayHandler (NewOverlayButtonHandler world))
	(this.overlayHandler = overlayHandler)
)

(factory T3D.NewGuiInputThread IInputThread (IEngine engine)(IWorld world):
	(construct GuiInputThread engine world)
)

(method GuiInputThread.Run -> :
	(IKeyboard keyboard (Keyboard))
	(Int32 leftKey = (keyboard.GetVKeyFromName "A"))
	(Int32 rightKey = (keyboard.GetVKeyFromName "D"))
	(Int32 fireKey = (keyboard.GetVKeyFromName "SPACEBAR"))
	(Int32 upKey = (keyboard.GetVKeyFromName "W"))
	(Int32 downKey = (keyboard.GetVKeyFromName "S")) 
	(Int32 overlayToggleKey = (keyboard.GetVKeyFromName "F1"))
	(Int32 guiToggleKey = (keyboard.GetVKeyFromName "F2"))
	(Int32 lockViewKey = (keyboard.GetVKeyFromName "L"))
	
	(this.engine.SetOverlayToggleKey overlayToggleKey)
	(this.engine.SetGUIToggleKey guiToggleKey)
	
	(IStringBuilder eventString = (Sys.Type.NewTokenBuilder))
	
	(MouseEvent mouseEvent)
	(KeyboardEvent keyEvent)
	(MHost.GuiTypes.GuiEvent guiEvent)
	
	(IGuiOverlay guiOverlay (MHost.GuiOverlay))
	
	(KeyState keys)
	
	(while this.engine.IsRunning
		(KeyState keys)
		
		(if (not this.engine.IsAppModal)
			
			(this.engine.PollKeyState keys)
			
			(Float32 straffe = 0)
			(Float32 forward = 0)
		
			(if (IsKeyPressed keys leftKey)
				(straffe -= 1)
			)
			
			(if (IsKeyPressed keys rightKey)
				(straffe += 1)
			)
			
			(if (IsKeyPressed keys upKey)
				(forward += 1)
			)
			
			(if (IsKeyPressed keys downKey)
				(forward -= 1)
			)
			
			(this.world.SetPlayerMoveIntent straffe forward)
		)
		
		(while (this.engine.GetNextKeyboardEvent keyEvent)
			// Required for overlay control
			
			(if ((keyEvent.virtualKeyCode == lockViewKey) and keyEvent.isUp)
				(if this.isViewLocked
					(this.isViewLocked = false)
				else
					(this.isViewLocked = true)
				)
			)
		)
		
		(while (this.engine.GetNextMouseEvent mouseEvent)
			// Required for overlay control
		)
		
		(while (guiOverlay.GetNextGuiEvent guiEvent)
			(if (guiEvent.eventId == (#EvIdGRisMadeVisible))
				(this.overlayHandler.BuildMenus)
				(continue)
			)
			
			(if (guiEvent.eventId == (#EvIdOverlayButtonClick))
				(eventString.Clear)
				(guiOverlay.AppendEventString eventString guiEvent)
				(ButtonArgs buttonArgs = 0)
				(invoke this.overlayHandler eventString buttonArgs)
			)
		)
		
		(Vec2 mouseDelta)
		(this.engine.GetNextMouseDelta mouseDelta)

		(if ((not this.isViewLocked) and (not this.engine.IsAppModal))
			(if ((mouseDelta.x != 0) or (mouseDelta.y != 0))
				(Float32 mouseDegreesPerDelta = T3D.Config.UI.MouseDegreesPerDelta)
				(Vec2 mouseDeltaDegrees = mouseDegreesPerDelta * mouseDelta)
				(this.world.UpdateMouseLook mouseDeltaDegrees)
			)
		)
		
		(yield 5000) // This gives 5ms per poll or 200 Hz
	)
)

(struct CommandButton
	(Rectf rect)
	(IString text)
)

(class GameBundle (defines T3D.IBundle)
	(ISpriteBuilder spriteBuilder)
	(IEngine engine)
	(IInputThread inputThread)
	(ICoroutineControl coroutines)
	(IWorld world)
)

(method GameBundle.Construct : 
	(ISpriteBuilder spriteBuilder (SpriteBuilder))
	(this.spriteBuilder = spriteBuilder)
	
	(this.engine = (Engine))
	
	(this.coroutines = (Coroutines))
	
	(this.world = (NewWorld))
	(this.inputThread = (NewGuiInputThread this.engine this.world))
	(this.coroutines.Add this.inputThread)
)

(method GameBundle.UIControl -> (IUIControl uiControl): 
	(uiControl = this.inputThread.UIControl)
)

(method GameBundle.Engine -> (IEngine engine):
	(engine = this.engine)
)

(method GameBundle.AddCoroutine -> (ICoroutine coroutine):
	(coroutines.Add coroutine)
)

(factory T3D.NewGameBundle T3D.IBundle : (construct GameBundle))

(function GetWorldToCameraQuat (WorldOrientation world)(Quat q)-> :
	/*
	(struct WorldOrientation
		(Degrees bearing) // 0 = North, 90 = East, 180 = South, 270 = West
		(Degrees elevation) // 0 = forward, 90 = up, -90 = down
		(Degrees roll) // anti-clockwise roll about direction vector
	)
	*/
	
	/* A world to camera quaternion gives the rotation and roll required to map a direction and roll
	defined in a WorldOrientation vector to an object facing -ve z, with x to the right and y up */
	
	// Consider the case of three rotations mapping -z to a direction N. The inverse transformation
	// of three rotations is three inverse rotations in reverse order. e.g (Rx.Ry.Rz)' = Rz'.Ry'.Rx'
	
	(Degrees invElevation = (-90 - world.elevation))
	
	(Quat invElevationYQ)
	(GetRotationQuat invElevation 1 0 0 invElevationYQ)
	
	(Degrees invBearing = (0 - world.bearing))
	
	(Degrees thetaXY = (0 - invBearing))
	
	(Quat invBearingZQ)
	(GetRotationQuat thetaXY 0 0 1 invBearingZQ)
	
	(Quat zy = invBearingZQ * invElevationYQ)

	(q = zy)
)

(function AdvanceCoroutines (ICoroutineControl coroutines)-> :
	(while (coroutines.Continue > 0)
		// Some coroutine did something interesting
	)

	// Either there are no coroutines or all are in a wait state
)

(function RenderWorldThenUI (IWorld world)(IEngine engine) -> :
	(GuiPopulator overlay =
			(closure (IGui gui) -> : 
				(world.RenderGui gui)
			)
	)

	(engine.Render overlay)	
)

(method GameBundle.Run -> :
	(ISceneBuilder scene (SceneBuilder))
	(ICamera camera (Camera))
	(camera.SetRHProjection 60 0.1 1000.0)
	
	(IWorld world = this.world)
	
	(IAudio audio (GetAudio))
	
	(AudioSource3D source)
	(source.priority = 1)
	(source.volume = 1.0)
	(source.position = 10 0 2)
	(source.dopplerVelocity = 0 0 0)
	
//	(Int64 jungleSoundId = (audio.Bind3DSample "!sounds/jungle.mp3"))
//	(Int64 jungleInstrumentId = (audio.Play3DSound jungleSoundId source 0))
		
	(IMaterialBuilder matBuilder (MaterialBuilder))
	(Int64 cubeId = (matBuilder.CreateCubeTexture "!textures/t3d/skybox/YokohamaSmall/" "jpg"))
	(scene.SetSkyBox cubeId)

/*	(instances.LoadRig "!mesh/t3d/mike.sxy") // generates mike_rig
	
//	(IRigs rigs (Rigs))
//	(IRig mike = (rigs.GetRig "mike_rig"))
	
//	(IStringBuilder meshName = (NewPathBuilder))
	/*
	(Matrix4x4 rigToWorld =
		(1 0 0   0)
		(0 1 0   1)
		(0 0 1 0.3)
		(0 0 0   1)
	)
	*/
	/*
	// Set scale to zero, which allows the childToWorld matrix to control scaling
	(Vec3 useModelMatrixScaling = 0 0 0)
	
	(for (Int32 i = 0)(i < mike.ChildCount)(i += 1)
		(IRig child = (mike.Child i))
		(meshName.Clear)
		(child.AppendMeshName meshName)
		
		(Matrix4x4 childToRig)
		(child.GetMatrix childToRig)
		
		(Matrix4x4 childToWorld = rigToWorld * childToRig)
		
		(Int64 childBodyId = (instances.AddBody meshName childToWorld useModelMatrixScaling 0))
		(scene.AddStatics childBodyId)
	)
	
	*/
	
	(while this.engine.IsRunning
		(AdvanceCoroutines this.coroutines)
		
		(Vec3 playerEyePosition)
		(world.GetPlayerEyePos playerEyePosition)
		(camera.SetPosition playerEyePosition)
		
		(WorldOrientation cameraOrientation)
		(world.GetCameraOrientation cameraOrientation)
		
		(Quat cameraQuat)
		(GetWorldToCameraQuat cameraOrientation cameraQuat)
		
		(camera.SetOrientation cameraQuat)
		
		(RenderWorldThenUI this.world this.engine)

		(this.engine.YieldForSystemMessages 5)
	)
	
	(this.coroutines.ReleaseAll)
)

(function Main (Int32 id) -> (Int32 exitCode):
	(Sys.Random.Seed 0)
	(IBundle bundle (NewGameBundle))
	(bundle.Run)
)
