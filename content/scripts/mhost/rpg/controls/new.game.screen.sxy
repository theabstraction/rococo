(using Sys)
(using Sys.Maths)
(using Sys.Maths.F32)
(using Sys.Type)
(using Sys.Random)
(using Sys.Type.Strings)
(using Sys.Reflection)

(using MPlat)
(using MHost)
(using MHost.OS)
(using MHost.Graphics)
(using Rococo)
(using Rococo.Graphics)
(using Rococo.Audio)
(using RPG)

(struct Slot
	(Rectf rect)
)

(class NewGameScreen 
	(implements IScreen)
	(implements IEventHandler)
	
	(IBundle bundle) 
	(IUIStack uistack)
	
	(Vec2 screenSpan)
	(Vec2 cursorPos)
	
	(array Slot slots) 

	(IListBuilder roster)
)

(struct CharRow
	(IString name)
	(Int32 strength)
	(Int32 agility)
	(Int32 wellness)
	(Int32 psyche)
	(Int32 ego)
	(Int32 maths)
)

(class PlayerRow
	(implements IListRow)
	(CharRow data)
)

(method PlayerRow.Render (IGui g)(Rectf rect)-> :
	(g.DrawBorder rect 4 0xFFFFFFFF 0xFFAFAFAF 0xFF8F8F8F 0xFF5F5F5F)
	(g.DrawText rect 0 this.data.name 0 0xFFFFFFFF)
)

(method PlayerRow.GetSpan (Vec2 span)-> :
	(span = 200 64)
)

(method PlayerRow.Construct (CharRow data): 
	(this.data = data)
)

(factory RPG.NewPlayerRow IListRow (CharRow data): (construct PlayerRow data))

(function ThrowSourceError (IString message)(IString source)-> :
	(IStringBuilder sb = (NewParagraphBuilder))
	(#build sb message ": " source)
	(Sys.Throw 0 sb)
)

(function IsAtomic (IExpression s)-> (Bool isAtomic):
	(Int32 typeAtomic = (#ExpressionTypeAtomic))
	(isAtomic = (s.Type == typeAtomic))
)

(function AssertAtomic (IExpression s)(IString source)-> :
	(if (not (IsAtomic s))
		(ThrowSourceError "Expecting atomic expression" source)
	)
)

(function AssertExpressionIsAtomicString (IExpression s)(IString value)(IString source)-> :
	(AssertAtomic s source)
		
	(Bool isMatched = (Sys.Type.Strings.IsExactMatch value s.Text))
	
	(if (not isMatched)
		(IStringBuilder sb = (NewParagraphBuilder))
		(#build sb "Expecting <" value ">: " source)
		(Sys.Throw 0 sb)
	)
)

(function AssertSFormatDictionary (IExpression s)(IString source)-> :
	(IExpression sRoot = (s 0))
	(Int32 childCount = (sRoot.ChildCount))
	(if (childCount != 3)
		(ThrowSourceError "Expecting 3 top level elements in an S-Format dictionary" source)
	)
	
	(IExpression sQuote = (sRoot 0))
	(AssertExpressionIsAtomicString sQuote "'" source)
	
	(IExpression sID = (sRoot 1))
	(AssertExpressionIsAtomicString sID "S-Format-Dictionary-v1.0" source)
)

(function AddCharRow (IListBuilder roster) (IString filename)-> :
	(CharRow data)
	(IExpression s = (MHost.OS.LoadExpression filename))
	
	/* Example expression:
	
	(' S-Format-Dictionary-v1.0 
		( 
			(I32 Strength 135)
			(I32 Agility 146)
			(I32 Wellness 146)
			(I32 Psyche 89)
			(I32 Ego 110)
			(I32 Maths 130)
			(STR Name "Corbin Fosnought")
		)
	)
	
	*/
	
	(AssertSFormatDictionary s filename)
	
	(IExpression sRoot = (s 0))
	(IExpression sAttributes = (sRoot 2))
	(#for (Int32 i = 0) (i < sAttributes.ChildCount)(i += 1)
		(IExpression sAttribute = (sAttributes i))
		(serialize sAttribute -> data)	
	)
	
	(IListRow row1 (NewPlayerRow data))
	(roster.AddRow row1)
)

(method NewGameScreen.Construct (IBundle bundle) -> (construct slots 5): 
	(this.bundle = bundle)
	(this.uistack = (MHost.Graphics.NewUIStack))
	(this.screenSpan = -1 -1)
	(this.cursorPos = -1 -1)
	(this.roster = (NewListBuilder bundle.UIControl 100))
	(this.uistack.AddTopLevelControl this.roster "roster")
	
	(IListBuilder roster = this.roster)
	
	(MPlat.OnFileName appendToList =
		(closure (IString fileName) -> :
			(AddCharRow roster fileName)
		)
	)
	
	(MPlat.OS.EnumerateFiles "!scripts/mhost/rpg/chaps/*.dict" appendToList)
)

(factory RPG.NewNewGameScreen MHost.IScreen (IBundle bundle):
	(construct NewGameScreen bundle)
)

(method NewGameScreen.Layout (IGui g) -> :
	(Vec2 ds)
	(g.GetScreenSpan ds)
	
	(Vec2 portraitSpan = 80 80)
	(Float32 border = 10)
	
	(Float32 xLeftFar = border)
	(Float32 xLeftNear = (border + portraitSpan.x))
	(Float32 xRightFar = (ds.x - border))
	(Float32 xRightNear = (xRightNear - portraitSpan.x))
	(Float32 yTopFar = border)
	(Float32 yTopNear = (border + portraitSpan.y))
	(Float32 yBottomFar = (ds.y - border))
	(Float32 yBottomNear = (yBottomFar - portraitSpan.y))
	
	(Float32 centreX = (ds.x / 2))
	(Float32 centreXleft = (centreX - (portraitSpan.x / 2)))
	(Float32 centreXright = (centreX + (portraitSpan.x / 2)))
	
	(this.slots.Clear)
	(this.slots.Push Slot ((centreXleft yTopFar centreXright yTopNear)))
	(this.slots.Push Slot ((xLeftFar yTopFar xLeftNear yTopNear)))
	(this.slots.Push Slot ((xRightFar yTopFar xRightNear yTopNear)))
	(this.slots.Push Slot ((xLeftFar yBottomNear xLeftNear yBottomFar)))
	(this.slots.Push Slot ((xRightFar yBottomNear xRightNear yBottomFar)))
	
	(Rectf rosterRect)
	(rosterRect.left = 128)
	(rosterRect.top = 128)
	(rosterRect.right = (ds.x - 128))
	(rosterRect.bottom = (rosterRect.top + 320))
	
	(this.roster.SetRect rosterRect g)
)

(method NewGameScreen.RenderGui (IGui g) -> :
	(Vec2 screenSpan)
	(g.GetScreenSpan screenSpan)
	
	(if (screenSpan != this.screenSpan)
		(this.screenSpan = screenSpan)
		(this.Layout g)
	)
	
	(Rectf rect = 0 0 this.screenSpan.x this.screenSpan.y)
	(g.DrawBorder rect 4 0xFFFFFFFF 0xFFAFAFAF 0xFF8F8F8F 0xFF5F5F5F)
	
	(Float32 right = (this.screenSpan.x - 200))
	(Float32 top = (this.screenSpan.y - 200))
	(Float32 bottom = (this.screenSpan.y - 70))
	(Rectf hintRect = 200 top right bottom)
	(g.DrawLeftAligned hintRect "Drag and drop portraits to character slots to build a party." 2 36 0xFFFFFFFF 50 120)
	
	(RenderTree this.uistack g)
	
	(foreach slot # this.slots
		(g.DrawBorder slot.rect 1 0xFFFFFFFF 0xFFAFAFAF 0xFF8F8F8F 0xFF5F5F5F)
	)
)

(method NewGameScreen.OnMouseDown (Int32 button) (Float32 x)(Float32 y) -> :
	(Vec2 pos = x y)
	
	(IEventHandler evHandler = this)
		
	(OnUIStackItem q = 
		(closure (UIStackItem item)->(Bool terminate):
			(MouseClickArgs args = pos evHandler button)
			(item.handler.OnMouseDown args)
		)
	)
	(this.uistack.RouteMouseEvent pos q)
)

(method NewGameScreen.OnMouseUp (Int32 button)(Float32 x)(Float32 y) -> :
	(Vec2 pos = x y)
	
	(IEventHandler evHandler = this)
	
	(OnUIStackItem q = 
		(closure (UIStackItem item)->(Bool terminate):
			(MouseClickArgs args = pos evHandler button)
			(item.handler.OnMouseUp args)
		)
	)
	
	(this.uistack.RouteMouseEvent pos q)
)

(method NewGameScreen.OnMouseMove (Float32 x)(Float32 y) -> :
	(Vec2 pos = x y)
	
	(IEventHandler evHandler = this)
	
	(OnUIStackItem q = 
		(closure (UIStackItem item)->(Bool terminate):
			(MouseClickArgs args = pos evHandler 0)
			(item.handler.OnMouseMove args)
		)
	)
	
	(this.uistack.RouteMouseEvent pos q)
)

(method NewGameScreen.OnWheel (Int32 spin) -> :
)

(method NewGameScreen.OnAsciiChar (Int32 asciiValue)-> :
)

(method NewGameScreen.OnSysKey (Bool isUp)(Int32 virtualKeyCode)-> :
	(this.uistack.RouteSysKey isUp virtualKeyCode)
)

