(using Sys)
(using Sys.Maths)
(using Sys.Maths.F32)
(using Sys.Type)
(using Sys.Random)
(using Sys.Type.Strings)

(using MPlat)
(using MHost)
(using MHost.Events)
(using MHost.OS)
(using MHost.Graphics)
(using MHost.Graphics.Widgets)
(using Rococo)
(using Rococo.Graphics)
(using Rococo.Audio)
(using RPG)

(struct AttributeCell
	(IString name)
	(Int32 value)
)

(interface RPG.IAttributeControl (extends MHost.Graphics.Widgets.IControl)
	(SetRect (Rectf outerRect)-> )
	(SetAttributeByName (IString name)(Int32 value)->)
	(AddValue (IString name)(Int32 delta)->)
	(GetValue (IString name)->(Int32 value))
)

(class AttributeControl (implements IAttributeControl)
	(Rectf outerRect)
	(array AttributeCell cells)
	(Int32 fontIndex)
	(IStringBuilder tempSB)
)

(method AttributeControl.Construct -> (construct cells 6): 
	(this.outerRect = -1 -1 -1 -1)
	
	(AttributeCell strength = "Strength" 100)
	(AttributeCell agi      = "Agility" 100)
	(AttributeCell wellness = "Wellness" 100)
	(AttributeCell psyche   = "Psyche" 100)
	(AttributeCell ego      = "Ego" 100)
	(AttributeCell maths 	= "Maths" 100)
	
	(this.cells.Push strength)
	(this.cells.Push agi)
	(this.cells.Push wellness)
	(this.cells.Push psyche)
	(this.cells.Push ego)
	(this.cells.Push maths)
	
	(this.tempSB = NewTokenBuilder)
	(this.tempSB.SetFormat 0 0 true false)
	
	(this.fontIndex = -1)
)

(method AttributeControl.GetValue (IString name)->(Int32 value):
	(foreach cell # this.cells
		(if (IsExactMatch cell.name name)
			(value = cell.value)
			(return)
		)
	)
	
	(IStringBuilder msg = NewParagraphBuilder)
	(#build msg "Could not find attribute [" name "] in attribute control")
	(Sys.Throw 0 msg)
)

(method AttributeControl.SetAttributeByName (IString name)(Int32 value) -> :
	(foreach cell # this.cells
		(if (IsExactMatch name cell.name)
			(cell.value = value)
			(return)
		)
	)
	
	(IStringBuilder sb = NewParagraphBuilder)
	(#build sb 
		"AttributeControl.SetAttributeByName: Could not find attribute named '" name "'&n"
		"Known attributes: Strength, Agility, Wellness, Psyche, Ego, Maths")
	(Sys.Throw 0 sb)
)

(method AttributeControl.AddValue (IString name)(Int32 value) -> :
	(foreach cell # this.cells
		(if (IsExactMatch name cell.name)
			(cell.value += value)
			(return)
		)
	)
	
	(IStringBuilder sb = NewParagraphBuilder)
	(#build sb 
		"AttributeControl.SetAttributeByName: Could not find attribute named '" name "'&n"
		"Known attributes: Strength, Agility, Wellness, Psyche, Ego, Maths")
	(Sys.Throw 0 sb)
)

(method AttributeControl.SetRect (Rectf outerRect)-> :
	(this.outerRect = outerRect)
)

(method AttributeControl.GetRect (Rectf outerRect)-> :
	(outerRect = this.outerRect)
)

(method AttributeControl.Render (IGui g)-> :
	(Float32 x0 = (this.outerRect.left + 16))
	(Float32 x1 = (this.outerRect.right - 16))
	(Float32 y = (this.outerRect.top + 4))
	(Float32 y1 )
	
	(this.fontIndex = 0)

	(Float32 rectHeight = (this.outerRect.bottom - this.outerRect.top))
	(Float32 innerRectHeight = (rectHeight - 8))
	(Float32 dy = (Sys.Maths.F32.Floor (innerRectHeight / 6)))
	
	(Float32 xV = (x1 - 60))
	
	(Float32 halfFontHeight = 16)
	
	(foreach cell # this.cells
		(y1 = (y + dy))
		(Float32 vCentre = (0.5 * (y + y1)))
		(Rectf nameRect)
		(nameRect.left = x0)
		(nameRect.right = x1)
		(nameRect.top = (vCentre - halfFontHeight))
		(nameRect.bottom = (vCentre + halfFontHeight))
		(g.DrawClippedText nameRect (#AlignmentFlagsLeft) cell.name this.fontIndex 0xFFFFFFFF this.outerRect)
		
		(this.tempSB.Clear)
		(#build this.tempSB cell.value)
		(Rectf valueRect)
		(valueRect.left = xV)
		(valueRect.right = x1)
		(valueRect.top = (vCentre - halfFontHeight))
		(valueRect.bottom = (vCentre + halfFontHeight))
		
		(g.DrawClippedText valueRect (#AlignmentFlagsRight) this.tempSB this.fontIndex 0xFFFFFFFF this.outerRect)
		
		(y += dy)
	)
	
	(g.DrawBorder this.outerRect 1 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFF)
)

(method AttributeControl.GetEventHandler -> (IEventHandler handler):
	
)

(factory RPG.NewAttributeControl IAttributeControl : (construct AttributeControl))


