(' #include 
	"!scripts/mhost/mplat.types.sxy"
	"!scripts/mhost/mhost.sxh.sxy"
	"!scripts/mplat.sxh.sxy"
	"!scripts/types.sxy"
	"!scripts/mhost/mhost.include.sxy"
)

(namespace EntryPoint)
	(alias Main EntryPoint.Main)
	
(using Sys)
(using Sys.Maths)
(using Sys.Type)
(using Sys.MPlat)
(using MHost)
(using MHost.OS)
(using MHost.Graphics)
(using Rococo)
(using Rococo.Graphics)
(using Rococo.Audio)

(namespace Harrier)
(using Harrier)

(struct Sprite
	(IString filename)
	(BitmapLocation location)
	(Bool facingRight)
)
	
(struct Entity 
	(Vec2 screenPosition)
	(Sprite image)
)

(interface Harrier.IWorldControl
	(SetPlayerDirection (Vec2 direction)-> )
)

(class PlayerThread 
	(implements Sys.ICoroutine)
	(IEngine engine)
	(IWorldControl worldControl)
)

(method PlayerThread.Construct (IEngine engine) (IWorldControl worldControl) : 
	(this.engine = engine)
	(this.worldControl = worldControl)
)

(factory Harrier.NewPlayerThread ICoroutine (IEngine engine) (IWorldControl worldControl):
	(construct PlayerThread engine worldControl)
)

(method PlayerThread.Run -> :
	(IKeyboard keyboard (Keyboard))
	(Int32 leftKey = (keyboard.GetVKeyFromName "A"))
	(Int32 rightKey = (keyboard.GetVKeyFromName "D"))
	(Int32 fireKey = (keyboard.GetVKeyFromName "SPACEBAR"))
	(Int32 upKey = (keyboard.GetVKeyFromName "W"))
	(Int32 downKey = (keyboard.GetVKeyFromName "S"))
	
	(Vec2 oldPlayerDirection = 0 0)
	
	(while this.engine.IsRunning
		(KeyState keys)
		(this.engine.PollKeyState keys)
		
		(Vec2 playerDirection = 0 0)
	
		(if (IsKeyPressed keys leftKey)
			(playerDirection.x = -1)
		)
		
		(if (IsKeyPressed keys rightKey)
			(playerDirection.x = 1)
		)
		
		(if (IsKeyPressed keys upKey)
			(playerDirection.y = -1)
		)
		
		(if (IsKeyPressed keys downKey)
			(playerDirection.y = 1)
		)
		
		(if ((oldPlayerDirection.x != playerDirection.x) or (oldPlayerDirection.y != playerDirection.y))
			(this.worldControl.SetPlayerDirection playerDirection)
			(oldPlayerDirection = playerDirection)
		)
		
		(yield 10000)
	)
)

(interface MHost.IWorld
	(ForEachEntityInWorld (OnEntity onEntity)->)
	(Init ->)
	(Advance ->)
	(RenderGui (IGui gui)-> )
)

(class World 
	(implements IWorld)
	(implements IWorldControl)
	
	(Sprite explosion)
	
	(IEngine engine)
	(ILegacySoundControl sound)

	(Entity player)
	
	(Vec2 playerDirection)
	(Vec2 playerPosition) // The player's location in the world
	(Vec2 worldPosition) // The top left of the screen in the worldv
	
	(Vec2 screenSpan)
	
	(Int32 score)
	(Float32 lives)
)

(method World.Construct (IEngine engine) (ILegacySoundControl sound) ->  :
	(this.engine = engine)
	(this.sound = sound)
	(this.screenSpan = 0 0)
)

(factory Harrier.NewWorld IWorld (IEngine engine) (ILegacySoundControl sound) : 
	(construct World engine sound)
)

(method World.SetPlayerDirection (Vec2 direction) -> :
	(this.playerDirection = direction)
)

(function InitSprite (IEngine engine)(Sprite bmp)-> :
	(engine.GetSpriteSpec bmp.filename bmp.location)
)

(archetype Harrier.OnEntity (Entity e)->)

(method World.ForEachEntityInWorld (OnEntity onEntity)-> :
	(onEntity this.player)
)

(method World.Init -> :
	(BitmapLocation defaultBmpLoc = (0 0 0 0) -1)
	
	(this.playerDirection = 0 0)
	(this.playerPosition = 500 600)
	(this.worldPosition = 0 0)
	(this.score = 0)
	(this.lives = 3)
	
	(this.explosion = "!textures/mhost/harrier/explosion.tiff" defaultBmpLoc true)
	
	(this.player = (322 322) ("!textures/mhost/harrier/av-8b_facing_right.tiff" defaultBmpLoc true))
	
	(IEngine engine = this.engine)
	
	(OnEntity initSprites = 
		(closure (Entity e)-> :
			(InitSprite engine e.image)
		)
	)
	(this.ForEachEntityInWorld initSprites)
	(InitSprite engine this.explosion)
)

(function DrawEntity (Entity e)(IGui gui) -> :
	(Int32 alignmentFlags = 0) // centred
	(gui.DrawSprite e.screenPosition alignmentFlags e.image.location)
)

(function RenderLives (Entity player)(IGui gui)(Float32 count)-> :
	(#for (Float32 i = 0)(i < count)(i += 1)
		(Float32 x =  (100 + (i * 64)))
		(Vec2 pos = x 640)
		(gui.DrawSprite pos 0 player.image.location)
	)
)

(function ExpandRect (Rectf rect)(Float32 span)(Vec2 centre)-> :
	(Float32 negspan = (0 - span))
	(rect = negspan negspan span span)
	(rect.left += centre.x)
	(rect.right += centre.x)
	(rect.bottom += centre.y)
	(rect.top += centre.y)
)

(function GetRowColour (Float32 z) -> (Int32 colour):
	(if (z >= 0)
		(Float32 f = (z / 1000))
		(ToRGBAb 0 0.5 f 1.0 -> colour)
	else
		(trip)
	//	(Float32 f = (1.0 - ((0 - z) / 2000)))
		(ToRGBAb 0 0.5 0.5 1.0 -> colour)
	)
)

(function RenderLandscape (Vec2 topLeftWorldPosition)(IGui gc)-> :
	(Vec2 s)
	(gc.GetScreenSpan s)
	
	(Int32 topRowColour = (GetRowColour topLeftWorldPosition.y))
	(Int32 bottomRowColour = (GetRowColour (topLeftWorldPosition.y + s.y)))
	
	(GuiQuad quad = 
		((0     0)((0 0) 0)(1 0 0 0) topRowColour)
		((s.x   0)((0 0) 0)(1 0 0 0) topRowColour)
		((0   s.y)((0 0) 0)(1 0 0 0) bottomRowColour)
		((s.x s.y)((0 0) 0)(1 0 0 0) bottomRowColour)
	)
	
	(gc.DrawQuad quad)
)

(method World.RenderGui (IGui gc) -> :
	(gc.GetScreenSpan this.screenSpan)
	
	(RenderLandscape this.worldPosition gc)

	(OnEntity drawSprites = (closure (Entity e)-> : (DrawEntity e gc)))
	(this.ForEachEntityInWorld drawSprites)
	
	(if (this.lives > 0)
		(RenderLives this.player gc (this.lives - 1))
	)
	
	(IStringBuilder sbScore (StringBuilder 128))
	(#build sbScore "Score: " this.score)
	
	(Int32 alignmentFlags = 0)
	(Rectf rect = 0 10 this.screenSpan.x 120)
	(gc.DrawText rect alignmentFlags sbScore 1 0xFFFFFF80)
)

(function MultiplyVec2fFloat32 (Vec2 a)(Float32 b)(Vec2 output) -> :
	(output.x = (a.x * b))
	(output.y = (a.y * b))
)

(function AddVec2fVec2f (Vec2 a)(Vec2 b)(Vec2 output) -> :
	(output.x = (a.x + b.x))
	(output.y = (a.y + b.y))
)

(method World.Advance  -> :
	(Vec2 delta = this.playerDirection * 4)
	(this.playerPosition = this.playerPosition + delta)
	
	(Float32 centreX = (this.screenSpan.x / 2))	
	(Float32 x = (this.playerPosition.x - centreX))
	
	(this.player.screenPosition.x = 500)
	
	(if (this.playerPosition.y > 300)
		(this.player.screenPosition.y = this.playerPosition.y)
		(this.worldPosition = x 0)
	else
		(this.player.screenPosition.y = 300)
		(Float32 y = (300 - this.playerPosition.y))
		(this.worldPosition = x y)
	)
)

(function Main (Int32 id) -> (Int32 exitCode):
	(ISprites sprites (Sprites))
	(sprites.AddEachSpriteInDirectory "!textures/mhost/harrier")
	(sprites.LoadAllSprites)
	
	(IEngine engine (Engine))
	(ILegacySoundControl sound (Rococo.Audio.LegacySoundControl))
	
	(IWorld world (NewWorld engine sound))
	(world.Init)
	
	(ICoroutineControl coroutines (Coroutines))
	
	(cast world -> IWorldControl control)
	
	(ICoroutine playerThread (NewPlayerThread engine control))
	(coroutines.Add playerThread)
	
	(while engine.IsRunning
		(while (coroutines.Continue > 0))
		
		(GuiPopulator p =
			(closure (IGui gui) -> : 
				(world.RenderGui gui)
			)
		)
		
		(engine.Render p)
		
		(world.Advance)
		
		(engine.YieldForSystemMessages 5)
	)
)