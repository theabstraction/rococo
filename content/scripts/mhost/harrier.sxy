(' #import (mhost "MHost"))

(namespace EntryPoint)
	(alias Main EntryPoint.Main)
	
(using Sys)
(using Sys.Maths)
(using Sys.Type)
(using Sys.Random)
(using MPlat)
(using MHost)
(using MHost.OS)
(using MHost.Graphics)
(using Rococo)
(using Rococo.Graphics)
(using Rococo.Audio)

(namespace Harrier)
(using Harrier)

(struct Sprite
	(IString filename)
	(BitmapLocation location)
	(Bool facingRight)
)
	
(struct Entity 
	(Vec2 screenPosition)
	(Sprite image)
)

(interface Harrier.IWorldControl
	(SetPlayerDirection (Vec2 direction)-> )
)

(class PlayerThread 
	(implements Sys.ICoroutine)
	(IEngine engine)
	(IWorldControl worldControl)
)

(method PlayerThread.Construct (IEngine engine) (IWorldControl worldControl) : 
	(this.engine = engine)
	(this.worldControl = worldControl)
)

(factory Harrier.NewPlayerThread ICoroutine (IEngine engine) (IWorldControl worldControl):
	(construct PlayerThread engine worldControl)
)

(method PlayerThread.Run -> :
	(IKeyboard keyboard (Keyboard))
	(Int32 leftKey = (keyboard.GetVKeyFromName "A"))
	(Int32 rightKey = (keyboard.GetVKeyFromName "D"))
	(Int32 fireKey = (keyboard.GetVKeyFromName "SPACEBAR"))
	(Int32 upKey = (keyboard.GetVKeyFromName "W"))
	(Int32 downKey = (keyboard.GetVKeyFromName "S"))
	
	(Vec2 oldPlayerDirection = 0 0)
	
	(while this.engine.IsRunning
		(KeyState keys)
		(this.engine.PollKeyState keys)
		
		(Vec2 playerDirection = 0 0)
	
		(if (IsKeyPressed keys leftKey)
			(playerDirection.x = -1)
		)
		
		(if (IsKeyPressed keys rightKey)
			(playerDirection.x = 1)
		)
		
		(if (IsKeyPressed keys upKey)
			(playerDirection.y = 1)
		)
		
		(if (IsKeyPressed keys downKey)
			(playerDirection.y = -1)
		)
		
		(if ((oldPlayerDirection.x != playerDirection.x) or (oldPlayerDirection.y != playerDirection.y))
			(this.worldControl.SetPlayerDirection playerDirection)
			(oldPlayerDirection = playerDirection)
		)
		
		(yield 10000)
	)
)

(interface MHost.IWorld
	(Advance ->)
	(RenderGui (IGui gui)-> )
)

(struct Star
	(Float32 x y brightness size)
)

(struct Cloud
	(Vec2 position)
	(Int32 alignment)
	(Float32 scale)
	(Int32 colour)
	(RGBA baseColour)
	(Vec2 velocity)
)

(class World 
	(implements IWorld)
	(implements IWorldControl)
	(implements ICoroutine)
	
	(Sprite explosion)
	(Sprite starSmall)
	(Sprite starLarge)
	(Sprite moon)
	(Sprite cloud)
	
	(IEngine engine)

	(Entity player)
	
	(Bool playerFacesRight)
	
	(Vec2 playerDirection)
	(Vec2 playerPosition) // The player's location in the world
	(Vec2 worldPosition) // The top left of the screen in the world
	
	(Vec2 screenSpan)
	
	(Int32 score)
	(Float32 lives)
	
	(array Star smallStars)
	(array Star largeStars)
	(array Cloud cloudsForeground)
	(array Cloud cloudsBackground)
	
	(IStringBuilder infoLine)
)

(method World.Construct (IEngine engine) ->	:
	(array Star smallStars 1000)
	(this.smallStars = smallStars)
	
	(array Star largeStars 10)
	(this.largeStars = largeStars)
	
	(array Cloud cloudsForeground 150)
	(this.cloudsForeground = cloudsForeground)
	
	(array Cloud cloudsBackground 150)
	(this.cloudsBackground = cloudsBackground)
	
	(this.engine = engine)
	(this.screenSpan = 0 0)
	(this.playerFacesRight = true)
	
	(for (Int32 i = 0)(i < 1000)(i += 1)
		(Star s)
		(AnyFloat 0 1366 -> s.x)
		(AnyFloat 400 2400 -> s.y)
		(Float32 f = (AnyFloat 0.01 1.0))
		(s.brightness = (Sys.Maths.F32.Power f 4.0))
		(s.size = 3)
		(this.smallStars.Push s)
	)
	
	(for (Int32 i = 0)(i < 10)(i += 1)
		(Star s)
		(AnyFloat 0 1366 -> s.x)
		(AnyFloat 400 2400 -> s.y)
		(AnyFloat 0.01 1.0 -> s.brightness)
		(s.size = 1)
		(this.largeStars.Push s)
	)
	
	(Int32 alignMirror = (#AlignmentFlagsMirror))
	(Int32 alignFlip = (#AlignmentFlagsFlip))
	
	(for (Int32 i = 0)(i < 150)(i += 1)
		(Cloud cloud = (-1000 -1000) 0 0 0xFFFFFFFF (1 1 1 1)(0 0))
		
		(cloud.alignment = 0)
		
		(if ((AnyFloat 0 1) > 0.5)
			(cloud.alignment += alignMirror)
		)
		
		(if ((AnyFloat 0 1) > 0.5)
			(cloud.alignment += alignFlip)
		)
		
		
		(cloud.baseColour.a = (AnyFloat 0.05 0.1))
		
		(AnyFloat 0.25 2 -> cloud.scale)
		
		(ToRGBAb cloud.baseColour -> cloud.colour)
		
		(this.cloudsBackground.Push cloud)
	)
	
	(for (Int32 i = 0)(i < 150)(i += 1)
		(Cloud cloud = (-1000 -1000) 0 0 0xFFFFFFFF (1 1 1 1)(0 0))
		
		(cloud.alignment = 0)
		
		(if ((AnyFloat 0 1) > 0.5)
			(cloud.alignment += alignMirror)
		)
		
		(if ((AnyFloat 0 1) > 0.5)
			(cloud.alignment += alignFlip)
		)
		
		(cloud.baseColour.a = (AnyFloat 0.05 0.1))
		
		(AnyFloat 0.5 2 -> cloud.scale)
		
		(ToRGBAb cloud.baseColour -> cloud.colour)
		
		(this.cloudsForeground.Push cloud)
	)
	
	(this.infoLine = NewPathBuilder)
)

(factory Harrier.NewWorld IWorld (IEngine engine) : 
	(construct World engine)
)

(method World.SetPlayerDirection (Vec2 direction) -> :
	(this.playerDirection = direction)
	(this.playerFacesRight = (direction.x >= 0))
)

(function InitSprite (IEngine engine)(Sprite bmp)-> :
	(engine.GetSpriteSpec bmp.filename bmp.location)
)

(archetype Harrier.OnEntity (Entity e)->)

(function DrawPlayer (World w)(IGui gui) -> :
	(Int32 alignmentFlags = 0) // centred
	
	(if (not w.playerFacesRight)
		(alignmentFlags = (#AlignmentFlagsMirror))
	)
	
	(gui.DrawSprite w.player.screenPosition alignmentFlags w.player.image.location)
)

(function RenderLives (Entity player)(IGui g)(Float32 count)-> :
	(Vec2 s)
	(g.GetScreenSpan s)
	(Float32 y = (s.y - 80))
	
	(for (Float32 i = 0)(i < count)(i += 1)
		(Float32 x =  (20 + (i * 64)))
		(Vec2 pos = x y)
		(y += 10)
		
		(Float32 right = (x + 70))
		(Float32 bottom = (y + 30))

		(Rectf rect = x y right bottom)
		(g.StretchSprite rect player.image.location)
	)
)

(function ExpandRect (Rectf rect)(Float32 span)(Vec2 centre)-> :
	(Float32 negspan = (0 - span))
	(rect = negspan negspan span span)
	(rect.left += centre.x)
	(rect.right += centre.x)
	(rect.bottom += centre.y)
	(rect.top += centre.y)
)

(function GetRowColour (Float32 z) -> (Int32 colour):
	(Float32 f = (1 - (z / 1600)))
	(RGBA c = 0 0.5 1.0 f)
	(ToRGBAb c -> colour)
)

(function RenderSkyGlow  (Vec2 topLeftWorldPosition)(IGui gc)-> :
	(Vec2 s)
	(gc.GetScreenSpan s)
	
	(Int32 topRowColour = (GetRowColour topLeftWorldPosition.y))
	(Int32 bottomRowColour = (GetRowColour (topLeftWorldPosition.y - s.y)))
	
	(GuiQuad quad = 
		((0     0)((0 0) 0)(1 0 0 0) topRowColour)
		((s.x   0)((0 0) 0)(1 0 0 0) topRowColour)
		((0   s.y)((0 0) 0)(1 0 0 0) bottomRowColour)
		((s.x s.y)((0 0) 0)(1 0 0 0) bottomRowColour)
	)
	
	(gc.DrawQuad quad)
)

(function RenderFields (Vec2 topLeftWorldPosition)(IGui gc)-> :
	(Vec2 s)
	(gc.GetScreenSpan s)
	
	(Float32 y0 = (topLeftWorldPosition.y - 300))
	(Float32 y1 = s.y)
	
	(Int32 horizonColour = 0xFF00FF00)
	(Int32 nearColour = 0xFF006000)
	
	(GuiQuad quad = 
		((0   y0)((0 0) 0)(1 0 0 0) horizonColour)
		((s.x y0)((0 0) 0)(1 0 0 0) horizonColour)
		((0   y1)((0 0) 0)(1 0 0 0) nearColour)
		((s.x y1)((0 0) 0)(1 0 0 0) nearColour)
	)
	
	(gc.DrawQuad quad)
)

(function RenderSpace (World w) (IGui gc)-> :
	(Int32 alignmentFlags = 0) // centred
	
	(Float32 y = (w.worldPosition.y - 800))
	(Vec2 moonPos = 750 y)
	(gc.DrawSprite moonPos alignmentFlags w.moon.location)
	
	(Vec2 pos)
	(RGBA colourF32 = 1 1 1 0)

	(foreach star # w.smallStars
		(pos.x = star.x)
		(pos.y = (w.worldPosition.y - star.y))	
		(colourF32.a = (star.brightness * (AnyFloat 0.5 1.0)))
		(gc.DrawColouredSprite pos 0 w.starSmall.location 1.0 (ToRGBAb colourF32))
	)
	
	(foreach star # w.largeStars
		(pos.x = star.x)
		(pos.y = (w.worldPosition.y - star.y))	
		(colourF32.a = (star.brightness * (AnyFloat 0.5 1.0)))
		(gc.DrawColouredSprite pos 0 w.starLarge.location 1.0 (ToRGBAb colourF32))
	)
)

(function RenderLandscape (Vec2 topLeftWorldPosition)(IGui gc)-> :
	(RenderSkyGlow topLeftWorldPosition gc)
	(RenderFields topLeftWorldPosition gc)
)

(function DrawInfo(IGui gc)(World w) -> :
	(IStringBuilder infoLine = w.infoLine)
	(infoLine.Clear)
	(infoLine.SetFormat 2 0 false false)
	(#build infoLine "Direction: (" w.playerDirection.x ", " w.playerDirection.y ")     ")  
	(#build infoLine "Position: (" w.playerPosition.x ", " w.playerPosition.y ")     ")  
	(#build infoLine "World - TopLeft: (" w.worldPosition.x ", " w.worldPosition.y ") ")  
	
	(Rectf rect = 0 0 w.screenSpan.x 40)
	(gc.DrawText rect (#AlignmentFlagsLeft) infoLine 7 0xFFFFFFFF)
)

(method World.RenderGui (IGui gc) -> :
	(gc.GetScreenSpan this.screenSpan)
	
	(RenderSpace this gc)
	(RenderLandscape this.worldPosition gc)
	
	(gc.SetGuiShaders "!shaders/compiled/gui.cloud.ps")
	
	(foreach c # this.cloudsBackground
		(Float32 x = ((c.position.x - this.playerPosition.x) + this.player.screenPosition.x))
		(Float32 y = ((this.playerPosition.y - c.position.y) + this.player.screenPosition.y))
		(Vec2 cloudPosition = x y)
		
		(Int32 colour)
		
		(if (c.position.y < 1056)
			(Float32 alpha = ((1056 - c.position.y) / 256))
			(RGBA adjustedColour = c.baseColour)
			(adjustedColour.a *= alpha)
			(ToRGBAb adjustedColour -> colour)
		else	
			(colour = c.colour)
		)
			
		(gc.DrawScaledColouredSprite cloudPosition c.alignment this.cloud.location 0.5 colour c.scale)
	)
	
	(gc.SetGuiShaders "!shaders/compiled/gui.shadow.ps")
	
	(Float32 alpha = 0)
	
	(if (this.playerPosition.y < 450)
		(alpha = (1 - ((this.playerPosition.y - 150) / 200)))
	)
	
	(RGBA shadowColour = 0 0 0 alpha)
	
	(Vec2 delta = 100 100)
	(Float32 deltaQuotient = (1.1 - alpha))
	(Vec2 deltaEx = delta * deltaQuotient)
	(Vec2 shadowPos = this.player.screenPosition + deltaEx)
	
	(Int32 alignmentFlags = 0) // centred
	
	(if (not this.playerFacesRight)
		(alignmentFlags = (#AlignmentFlagsMirror))
	)
	
	(gc.DrawScaledColouredSprite shadowPos alignmentFlags this.player.image.location 0.5 (ToRGBAb shadowColour) alpha)
	
	(gc.SetGuiShaders "")

	(DrawPlayer this gc)
	
	(gc.SetGuiShaders "!shaders/compiled/gui.cloud.ps")
	
	(foreach c # this.cloudsForeground
		(Float32 x = ((c.position.x - this.playerPosition.x) + this.player.screenPosition.x))
		(Float32 y = ((this.playerPosition.y - c.position.y) + this.player.screenPosition.y))
		(Vec2 cloudPosition = x y)
		
		(Int32 colour)
		
		(if (c.position.y < 1056)
			(Float32 alpha = ((1056 - c.position.y) / 256))
			(RGBA adjustedColour = c.baseColour)
			(adjustedColour.a *= alpha)
			(ToRGBAb adjustedColour -> colour)
		else	
			(colour = c.colour)
		)
		
		(gc.DrawScaledColouredSprite cloudPosition c.alignment this.cloud.location 0.5 colour c.scale)
	)
	
	(gc.SetGuiShaders "")
	
	(if (this.lives > 0)
		(RenderLives this.player gc (this.lives - 1))
	)
	
	(DrawInfo gc this)
)

(function MultiplyVec2fFloat32 (Vec2 a)(Float32 b)(Vec2 output) -> :
	(output.x = (a.x * b))
	(output.y = (a.y * b))
)

(function AddVec2fVec2f (Vec2 a)(Vec2 b)(Vec2 output) -> :
	(output.x = (a.x + b.x))
	(output.y = (a.y + b.y))
)

(method World.Advance  -> :
	(Vec2 delta = this.playerDirection * 4)
	(this.playerPosition = this.playerPosition + delta)
	(this.playerPosition.y = (F32.MaxOf this.playerPosition.y 150))
	(Float32 maxHeight = 2000)
	(this.playerPosition.y = (F32.MinOf maxHeight this.playerPosition.y))
	
	(Float32 centreX = (this.screenSpan.x / 2))	
	(Float32 x = (this.playerPosition.x - centreX))
	
	(this.player.screenPosition.x = (this.screenSpan.x / 2))
	
	(Float32 scrollHeight = (this.screenSpan.y / 2))
	(if (this.playerPosition.y <= scrollHeight)
		(this.player.screenPosition.y = (this.screenSpan.y - this.playerPosition.y))
		(this.worldPosition = x this.screenSpan.y)
	else
		(this.player.screenPosition.y = (this.screenSpan.y - scrollHeight))
		(Float32 y = (this.screenSpan.y + (this.playerPosition.y - scrollHeight)))
		(this.worldPosition = x y)
	)
	
	(if (this.playerPosition.y > 0)
		(this.AdvanceClouds)
	)
)

(method World.AdvanceClouds -> :
	(Vec2 halfSpan = this.screenSpan * 0.5)
	(Float32 maxY = (this.playerPosition.y + halfSpan.y))
	(maxY += 512)
	
	(Float32 minY = (this.playerPosition.y - halfSpan.y))
	(minY -= 512)
	
	(if (minY < 800)
		(minY = 800)
	)
	
	(Float32 maxX = (this.playerPosition.x + halfSpan.x))
	(maxX += 512)
	
	(Float32 minX = (this.playerPosition.x - halfSpan.x))
	(minX -= 512)
		
	(foreach cloud # this.cloudsForeground
		(Vec2 pos = cloud.position)
		(if (((pos.x < minX) or (pos.x > maxX)) or (((minY < maxY) and (pos.y < minY)) or (pos.y > maxY)))
			(Float32 f = (AnyFloat 0 1))
			(if (f < 0.25)
				(pos.x = (minX + (AnyFloat 0 250)))
				(pos.y = (AnyFloat minY maxY))
			else
				(if (f < 0.5)
					(pos.x = (maxX - (AnyFloat 0 250)))
					(pos.y = (AnyFloat minY maxY))
				else
					(if (f < 0.75)
						(pos.x = (AnyFloat minX maxX))
						(pos.y = (maxY - (AnyFloat 0 250)))
					else
						(pos.x = (AnyFloat minX maxX))
						(pos.y = (minY + (AnyFloat 0 250)))
					)
				)
			)
			
			(cloud.position = pos)
			(cloud.velocity.x = (AnyFloat -0.3 0.3))
			(cloud.velocity.y = (AnyFloat -0.3 0.3))
		)
		
		(cloud.position = cloud.position + cloud.velocity)
	)
)

(method World.Run -> :
	(BitmapLocation defaultBmpLoc = (0 0 0 0) -1 (0 0))
	
	(this.playerDirection = 0 0)
	(this.playerPosition = 500 150)
	(this.worldPosition = 0 0)
	(this.score = 0)
	(this.lives = 3)
	
	(this.explosion = "!textures/mhost/harrier/explosion.tiff" defaultBmpLoc true)
	(this.starSmall = "!textures/mhost/harrier/star.1.tiff" defaultBmpLoc true)
	(this.starLarge = "!textures/mhost/harrier/star.3.tiff" defaultBmpLoc true)
	(this.moon = "!textures/mhost/harrier/moon.tiff" defaultBmpLoc true)
	(this.cloud = "!textures/mhost/harrier/cloud.tiff" defaultBmpLoc true)
	
	(this.player = (322 322) ("!textures/mhost/harrier/av-8b_facing_right.tiff" defaultBmpLoc true))
	
	(IEngine engine = this.engine)
	
	(InitSprite engine this.player.image)
	(InitSprite engine this.explosion)
	(InitSprite engine this.starSmall)
	(InitSprite engine this.starLarge)
	(InitSprite engine this.moon)
	(InitSprite engine this.cloud)
	
	(while engine.IsRunning
		(this.Advance)
		(yield 1000)
	)
)

(function Main (Int32 id) -> (Int32 exitCode):
	(ISpriteBuilder spriteBuilder (SpriteBuilder))
	(spriteBuilder.Clear)
	(spriteBuilder.AddEachSpriteInDirectory "!textures/mhost/harrier")
	(spriteBuilder.LoadAllSprites)
	
	(IEngine engine (Engine))
	
	(IWorld world (NewWorld engine))
	
	(ICoroutineControl coroutines (Coroutines))
	
	(cast world -> IWorldControl control)
	(ICoroutine playerThread (NewPlayerThread engine control))
	(coroutines.Add playerThread)
	
	(cast world -> ICoroutine worldThread)
	(coroutines.Add worldThread)
	
	(while engine.IsRunning
		(while (coroutines.Continue > 0))
		
		(GuiPopulator p =
			(closure (IGui gui) -> : 
				(world.RenderGui gui)
			)
		)
		
		(engine.Render p)
		
		(engine.YieldForSystemMessages 5)
	)
)