(' #file.type rococo.hv)

(' #include 
	"!scripts/mplat.sxh.sxy"
	"!scripts/hv.sxh.sxy"
	"!scripts/types.sxy"
)

(namespace EntryPoint)
	(alias Main EntryPoint.Main)
	

(using HV)
(using Rococo)
(using Rococo.Graphics)
(using Sys.Type)
(using Sys.Maths)
(using Sys.Geometry.F32)
(using Sys.Random)

(function AddTriangle (IMeshBuilder mb) (Triangle t)(Triangle2d uv)-> :
	(Vec3 n)
	(GetNormal t n)
	
	(ObjectVertex a = t.a n 0x00000000 0xFFFFFFFF uv.a)
	(ObjectVertex b	= t.b n 0x00000000 0xFFFFFFFF uv.b)
	(ObjectVertex c = t.c n 0x00000000 0xFFFFFFFF uv.c)	
	
	(mb.AddTriangle a b c)
)

(function AddQuad (IMeshBuilder mb) (Quadf quad)(Float32 uScale)(Float32 vScale)-> :
	(Triangle t = quad.a quad.b quad.c)
	(Vec3 n)
	(GetNormal t n)
	
	(Vec3 top = quad.b - quad.a)
	(Vec3 left = quad.a - quad.d)
	(Float32 u = (uScale * (Length top)))
	(Float32 v = (vScale * (Length left)))
	
	(ObjectVertex a = (quad.a.x quad.a.y quad.a.z) (n.x n.y n.z)  0x00000000 0xFFFFFFFF (0 0))
	(ObjectVertex b	= (quad.b.x quad.b.y quad.b.z) (n.x n.y n.z)  0x00000000 0xFFFFFFFF (u 0))
	(ObjectVertex c = (quad.c.x quad.c.y quad.c.z) (n.x n.y n.z)  0x00000000 0xFFFFFFFF (u v))	
	(ObjectVertex d = (quad.d.x quad.d.y quad.d.z) (n.x n.y n.z)  0x00000000 0xFFFFFFFF (0 v))	
	
	(mb.AddTriangle a b c)
	(mb.AddTriangle c d a)
)

(function AddBox (IMeshBuilder mb)(Vec3 v)(Vec3 w)(Float32 uScale)(Float32 vScale)-> :
	(Vec3 usw   = v.x v.y w.z)
	(Vec3 use   = w.x v.y w.z)
	(Vec3 lse   = w.x v.y v.z)
	(Vec3 lsw   = v.x v.y v.z)
	
	(Vec3 unw   = v.x w.y w.z)
	(Vec3 une   = w.x w.y w.z)
	(Vec3 lne   = w.x w.y v.z)
	(Vec3 lnw   = v.x w.y v.z)
	
	(Quadf south = usw use lse lsw)
	(AddQuad mb south uScale vScale) // south
	
	(Quadf north = une unw lnw lne)
	(AddQuad mb north uScale vScale) // north
	
	(Quadf lower = lsw lse lne lnw)
	(AddQuad mb lower uScale vScale) // lower
	
	(Quadf upper = unw une use usw)
	(AddQuad mb upper uScale vScale) // upper
	
	(Quadf left = unw usw lsw lnw)
	(AddQuad mb left uScale vScale) // left
	
	(Quadf right = use une lne lse)
	(AddQuad mb right uScale vScale) // right
)

(archetype HV.ObjectFunction (IMeshBuilder mb)->)

(function AddObject (IString texture)(IString localName)(ObjectFunction f)-> :
	(ICorridor corridor (Corridor))
	(IStringBuilder meshName (StringBuilder 256))
	(corridor.GetComponentMeshName localName meshName)
	
	(IMeshBuilder mb (MeshBuilder))
	(mb.Clear)
	(mb.Begin meshName)
	
	(f mb)
	
	(mb.End)
	
	(corridor.CentreComponent localName meshName texture)
)

(function Main (Int32 id)->(Int32 exitCode):
	(ICorridor corridor (Corridor))
	(Vec3 span)
	(corridor.GetSpan span)
	(Float32 x0 = (0.5 * (0 - span.x)))
	(Float32 x1 = (0.5 * span.x))
	(Float32 halfWidth = (AnyOf 0.1 0.5))
	(Float32 y0 = (0 - halfWidth))
	(Float32 y1 = halfWidth)
	(Float32 z0 = 2.5)
	(Float32 z1 = span.z)
	
	(ObjectFunction door = 
		(closure (IMeshBuilder mb)-> :
			(Vec3 v = x0 y0 z0)
			(Vec3 w = 0 y1 z1)
			(Float32 uvScale = (AnyOf 0.1 1.0))
			
			(IRimTesselator rim (RimTesselator))
			
			(rim.Clear)
			(rim.MakeElipse 20 x1 x1)/*
			(rim.AddPointXY -0.5   0)
			(rim.AddPointXY  0.5   0)
			(rim.AddPointXY  0.5 1.0)
			(rim.AddPointXY  0.0 1.5)
			(rim.AddPointXY -0.5 1.0)
			(rim.CloseLoop)*/
			
			(Matrix4x4 transform =
				(1 0  0 0)
				(0 0 -1 0)
				(0 1  0 1)
				(0 0  0 1)
			)
			(rim.SetTransform transform)
			
			(
				(Int32 count = rim.PerimeterVertices)
				(#for (Int32 i = 0)(i < count)(#inc i)
					(Quadf q)
					(rim.GetRimQuad -0.25 0.25 i q)			
					(AddQuad mb q uvScale uvScale)			
				)
			)
			
			(
				(Int32 triangles = rim.TesselateUniform)
				(#for (Int32 i = 0)(i < triangles)(#inc i)
					(Triangle t)
					(Triangle2d uv)
					(rim.GetTopTriangle i t uv 0.25)
					(AddTriangle mb t uv)
					(rim.GetBottomTriangle i t uv -0.25)
					(AddTriangle mb t uv)
				)
				//(AddBox mb v w uvScale uvScale)
			)
		)
	)
	(AddObject "!textures/walls/metal2.jpg" "door" door)
	
	(Float32 pillarWidth =  (AnyOf 0.1 0.5))
	
	(ObjectFunction pillars = 
		(closure (IMeshBuilder mb)-> :
			(Float32 east = (x0 + pillarWidth))
			(Float32 west  = (x1 - pillarWidth))
			(Float32 south = (y0 - pillarWidth))
			(Float32 north = (y1 + pillarWidth))
			(Float32 uvScale = (AnyOf 0.1 1.0))
			(
				(Vec3 v = x0 south  -1.0)
				(Vec3 w = east  y0  z1)
				(AddBox mb v w uvScale uvScale)
				(Vec3 v1 = x0      y1  -1.0)
				(Vec3 w1 = east north  z1)
				(AddBox mb v1 w1  uvScale uvScale)
			)
			
			(
				(Vec3 v = west south -1.0)
				(Vec3 w = x1    y0  z1)
				(AddBox mb v w  uvScale uvScale)
				(Vec3 v1 = west    y1  -1.0)
				(Vec3 w1 = x1   north  z1)
				(AddBox mb v1 w1 uvScale uvScale)
			)
		)
	)
	(AddObject "!textures/walls/metal3.jpg" "door.pillars" pillars)
	
	
	(ObjectFunction topRods = 
		(closure (IMeshBuilder mb)-> :
			(Float32 rodHeight = (AnyOf 0.1 0.5))
			(Float32 rodWidth  = (AnyOf 0.1 0.5))
			(Float32 z = (z1 - rodHeight))
			(Float32 south = (y0 - rodWidth))
			(Float32 north = (y1 + rodWidth))
			(Float32 uvScale = (AnyOf 0.1 1.0))
			(Vec3 v = x0 south     z)
			(Vec3 w = x1  y0      z1)
			(AddBox mb v w uvScale uvScale)
			(Vec3 v1 = x0      y1       z)
			(Vec3 w1 = x1   north      z1)
			(AddBox mb v1 w1 uvScale uvScale)
		)
	)
	(AddObject "!textures/walls/metal3.jpg" "door.top.rods" topRods)
	
	
	(ObjectFunction rails = 
		(closure (IMeshBuilder mb)-> :
			(Float32 quadLeft = (x0 + 0.01))
			(Float32 uvScale = (AnyOf 0.1 1.0))
			(Float32 z = (z1 - 0.01))
			(
				(Quadf q = 
					(quadLeft y0 z1)
					(quadLeft y1 z1)
					(quadLeft y1 -1.0)
					(quadLeft y0 -1.0)
				)
				(AddQuad mb q uvScale uvScale)
			)
			
			(Float32 quadRight = (x1 - 0.01))
			(
				(Quadf q = 
					(quadRight y1 z1)
					(quadRight y0 z1)
					(quadRight y0 -1.0)
					(quadRight y1 -1.0)
				)
				(AddQuad mb q uvScale uvScale)
			)
			
			(
				(Quadf q = 
					(x0 y0 z)
					(x1 y0 z)
					(x1 y1 z)
					(x0 y1 z)
				)
				(AddQuad mb q uvScale uvScale)
			)
		)
	)
	(AddObject "!textures/walls/black.tif" "door.rails" rails)
)