(' #file.type rococo.hv)

(' #include 
	"!scripts/mplat.sxh.sxy"
	"!scripts/hv.sxh.sxy"
	"!scripts/hv/hv.types.sxy"
	"!scripts/types.sxy"
	"!scripts/mplat.types.sxy"
)

(namespace EntryPoint)
	(alias Main EntryPoint.Main)
	

(using HV)
(using Rococo)
(using Rococo.Graphics)
(using Rococo.Entities)
(using Sys.Type)
(using Sys.Maths)
(using Sys.Maths.F32)
(using Sys.Geometry.F32)
(using Sys.Random)

(function Flush (IQuadStackTesselator qst ) (IMeshBuilder mb ) -> :
	(VertexTriangle topRight)
	(VertexTriangle bottomLeft)
	(while (qst.PopOutputAsTriangles topRight bottomLeft)
		(mb.AddTriangleEx topRight)
		(mb.AddTriangleEx bottomLeft)
	)
)

(function MakeCupboard (IString name)-> :
	(IMeshBuilder mb (MeshBuilder))
	(mb.Clear)
	(mb.Begin name)
	
	(IQuadStackTesselator qst (QuadStackTesselator))
	
	(Float32 length = (AnyFloat 1 4))
	(Float32 width = (AnyFloat 0.75 1.25))
	(Float32 height = (AnyFloat 1 2.5))
	
	(Float32 x0 = (width / -2))
	(Float32 x1 = (width / 2))
	(Float32 y0 = (length / -2))
	(Float32 y1 = (length / 2))
	
	(Float32 uvScale = (AnyFloat 0.1 0.25))
	
	(Float32 u0 = (x0 * uvScale))
	(Float32 u1 = (x1 * uvScale))
	(Float32 v0 = (y0 * uvScale))
	(Float32 v1 = (y1 * uvScale))
	
	(Vec3 up = 0 0 1)
	
	(IInstances instances (Instances))

	(MaterialVertexData woodFrame)
	(instances.GetRandomMaterialId (#MaterialCategoryWood) -> woodFrame.id)
	(AnyFloat 0 0.1 -> woodFrame.gloss)
	(AnyColour 60 100 60 100 0 20 80 128 -> woodFrame.colour)
	
	(QuadVertices scaffold =
		(
			(x0 y1 0)
			(x1 y1 0)
			(x1 y0 0)
			(x0 y0 0)
		)
		(u0 v1 u1 v0)
		(up up up up)
		(0 0 0 0)
	)
	
	(qst.PushQuad scaffold woodFrame)
	(qst.AddCuboid 0 1 0 1 height uvScale woodFrame)
	(qst.ClearInput)
	
	(Vec3 front = 1 0 0)
	(qst.MoveOutputToInputWithNormalDotRange front 0.99 1)
	
	(MaterialVertexData backPanel)
	(instances.GetRandomMaterialId (#MaterialCategoryWood) -> backPanel.id)
	(backPanel.gloss = ((AnyFloat 0.01 0.02) + woodFrame.gloss))
	
	(AnyColour 80 100 80 100 0 20 80 128 -> backPanel.colour)
	
	(Rectf hole = 0.05 0.95 0.95 0.05)
	(qst.Intrude hole (width - 0.05) uvScale woodFrame backPanel)
	
	(qst.MoveOutputToInputWithMat backPanel)
	
	(Float32 shelfHeight = (AnyFloat 0.2 0.5))
	
	(Float32 nShelves = (Floor (height / shelfHeight) ))
	
	(if (nShelves > 0)	
		(shelfHeight = (1 / nShelves))
		(Float32 yShelf = shelfHeight)
		
		(nShelves = (nShelves - 1))
		
		(MaterialVertexData shelfMat)
		(Int32 catId = (#MaterialCategoryWood))
		(instances.GetRandomMaterialId catId -> shelfMat.id)
		(shelfMat.gloss = ((AnyFloat 0.01 0.02) + woodFrame.gloss))
	
		(AnyColour 80 100 80 100 0 20 80 128 -> shelfMat.colour)
		
		(#for (Float32 i = 0)(i < nShelves)(i = (i + 1))
			(qst.AddCuboid yShelf (yShelf + 0.025) 0 1 (width - 0.05) uvScale shelfMat)
			(yShelf = (yShelf + shelfHeight))
		)
	)
	
	(Flush qst mb)
	
	(qst.MoveInputToOutput)
	
	(Flush qst mb)
		
	(mb.End true false)
	
	(mb.Clear)
	
	(IStringBuilder sb = NewPathBuilder)
	
	(sb.AppendIString name)
	(sb.AppendIString ".door.left")
	(mb.Begin sb)
		(Float32 doorThickness = (AnyFloat 0.1 0.25))
		(Float32 doorDelta = (doorThickness / length))
		
		(Vec3 scaffoldDelta = 0 0 0.01)
		(qst.PushQuad scaffold woodFrame)
		(qst.Translate scaffoldDelta)
		
		(MaterialVertexData doorMat)
		(instances.GetRandomMaterialId (#MaterialCategoryStone) -> doorMat.id)
		(AnyFloat 0.01 0.1 -> doorMat.gloss)
		(AnyColour 0 255 0 255 0 255 128 255 -> doorMat.colour)
			
		(qst.AddCuboid 0.01 0.4975 1 (1 + doorDelta) (height - 0.02) uvScale doorMat)
		(Flush qst mb)
	(mb.End false false)
	
	(sb.Clear)
	(sb.AppendIString name)
	(sb.AppendIString ".door.right")
	(mb.Begin sb)
		(qst.AddCuboid 0.5025 0.99 1 (1 + doorDelta) (height - 0.02) uvScale doorMat)
	(Flush qst mb)
	
	(mb.End false false)
)

(function Main (Int32 id)->(Int32 exitCode):
	//(trip)
	(ISectorEnumerator sectors (SectorEnumerator))
	(Int32 nSectors = sectors.Count)
	
	(MakeCupboard "object.cupboard.1")
	
	(Int32 addItemFlags = 0)
	(addItemFlags = (addItemFlags + (#AddItemFlagsAlignEdge)))
		
	(#for (Int32 i = 0)(i < nSectors)(#inc i)
		(ISectorLayout sector = (sectors.GetSector i))
			
		(ObjectCreationSpec ocs)
		(Int64 id = (sector.AddItemToLargestSquare "object.cupboard.1" addItemFlags ocs))
		(sector.UseUpFacingQuads id)
	)
)