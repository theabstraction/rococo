(' #file.type rococo.hv)

(namespace EntryPoint)
	(alias Main EntryPoint.Main)
	

(using HV)
(using Rococo)
(using Rococo.Entities)
(using Rococo.Graphics)
(using Sys.Type)
(using Sys.Maths)
(using Sys.Geometry.F32)
(using Sys.Random)

(function TesselateWallAndShelf (WallSegment segment)(ISectorWallTesselator sector)(IQuadStackTesselator qst)(Float32 uStart)->(Float32 uEnd) :
	(IScriptConfig config (ScriptConfig))
	(Float32 uvScale = (config.GetFloat "UV Scale" 0.0325 0.01 10))
	(Float32 fBottomR = (config.GetFloat "Bottom min"   0.001 0.0001 0.4))
	(Float32 fBottomS = (config.GetFloat "Bottom range" 0.001 0.0001 0.4))
	(Float32 relFreizeDrop = (config.GetFloat "Frieze drop" 0.9 0.6 0.999))
	(Float32 relSkirtHeight = (config.GetFloat "Skirt height" 0.1 0.001 0.3))
	(Float32 fTopR = (config.GetFloat "Top min"   0.6 0.5 0.95))
	(Float32 fTopS = (config.GetFloat "Top range" 0.3 0.0  0.4))
	(Float32 basinL = (config.GetFloat "Basin left"   0.1 0.001 0.45))
	(Float32 basinR = (config.GetFloat "Basin right"  0.9 0.550 0.99))

	(Float32 u0 = uStart)
	(Float32 u1 = (u0 + (segment.span.x * uvScale)))
	(uEnd = u1)
	
	(IInstances instances (Instances))
	
	(MaterialVertexData brick)
	(sector.GetMaterial brick "brickwork")
	
	(MaterialId matBrickId = brick.id)
	(brick.gloss = 0.0001)
	(MaterialVertexData brickSides = brick.colour matBrickId 0.001)
	(MaterialVertexData brickBack = brick.colour matBrickId 0.0021)
	(MaterialVertexData water = 0x00FFA0A0 matBrickId 0.03125)
	
	(MaterialId shelfId = (instances.GetRandomMaterialId (#MaterialCategoryWood)))
	(MaterialVertexData pictureFrame = 0xFFFFFFFF shelfId 0.05)
	(MaterialVertexData pictureFrameOuter = 0xFFFFFFFE shelfId 0.05)
	
	(MaterialId matPortraitId = (instances.GetMaterialDirect "!textures/hv/materials/hi-rez/portraits/various_x4.jpg"))
	(MaterialVertexData portrait = 0xFF000000 matPortraitId 0.85)
	
	(Float32 y0 = (AnyFloat fTopR (fTopR + fTopS)))
	(Float32 y1 = (AnyFloat fBottomR (fBottomR + fBottomS)))
	
	(Float32 x0 = (AnyFloat 0.1 0.3))
	(Float32 x1 = (1.0 - x0))
	
	(Float32 depth = (AnyFloat 0.5 1.1))
	
	(Rectf hole = x0 y0 x1 y1)
	
	(qst.SetBasis segment.tangent segment.normal segment.vertical)
	
	(qst.Clear)
		
	(QuadVertices qv)
	(qv.positions = segment.quad)
	(qv.normals.a = segment.normal)
	(qv.normals.b = segment.normal)
	(qv.normals.c = segment.normal)
	(qv.normals.d = segment.normal)
	(qv.uv.left = u0)
	(qv.uv.right = u1)
	(qv.uv.top = (segment.quad.a.z * uvScale))
	(qv.uv.right = u1)
	(qv.uv.bottom = (segment.quad.d.z * uvScale))
	
	(qst.PushQuad qv brick)
	
	(qst.SplitAcrossTangent relSkirtHeight brick.colour brick.colour  0x1F000000 brick brick)
	(qst.MoveOutputToInputWithMat brick)
	(qst.SplitAcrossTangent relFreizeDrop 0x1F000000 brick.colour brick.colour  brick brick)
	(qst.MoveOutputToInputWithMat brick)
	(qst.Intrude hole depth uvScale brickSides brickBack)
	
	(Vec3 up = 0 0 1)
	(qst.MoveOutputToInputWithNormalDotRange up 0.99 1.0)
	
	(Rectf basinRect = basinL 0.9 basinR 0.1)
	(qst.Intrude basinRect 0.1 uvScale brickSides water)
	
	(qst.MoveOutputToInputWithMat brickBack)
	(qst.AddCuboidAbs -0.75 0.75 0.75 -0.75 0.2 0.25 pictureFrame)
	(qst.MoveInputToOutput)
	
	(qst.MoveOutputToInputWithMat pictureFrame)
	
	(Vec3 out = 0 1 0)
	(qst.MoveInputToOutputWithNormalDotRange out 0.99 1.0)
	
	(qst.SetMaterial pictureFrameOuter)
	(qst.MoveInputToOutput)
	
	(qst.MoveOutputToInputWithMat pictureFrame)
	(qst.SetMaterial portrait)
	(Rectf topLeftPicture = 0 0 0.5 0.5)
	(qst.SetTextureRect topLeftPicture)
	(qst.MoveInputToOutput)
	
	(ITriangleList tris = sector.WallTriangles)
	
	(VertexTriangle topLeft)
	(VertexTriangle bottomRight)
	(while (qst.PopOutputAsTriangles topLeft bottomRight)
		(tris.AddTriangle topLeft)
		(tris.AddTriangle bottomRight)
	)
)

(function Main (Int32 id)->(Int32 exitCode):
	(ISectorWallTesselator sector (SectorWallTesselator))
	(Int32 nSegments = sector.NumberOfSegments)
	(Float32 u = 0)
	
	(IQuadStackTesselator qst (QuadStackTesselator))
		
	(#for (Int32 i = 0)(i < nSegments)(#inc i)
		(WallSegment seg)
		(sector.GetSegment i seg)
		(TesselateWallAndShelf seg sector qst u -> u)
	)
)