(' #file.type rococo.hv)

(' #include 
	"!scripts/hv.sxh.sxy"
	"!scripts/types.sxy"
	"!scripts/mplat.sxh.sxy"
	"!scripts/hv/hv.types.sxy"
)

(namespace EntryPoint)
	(alias Main EntryPoint.Main)
	
(using Sys.Maths)
(using Sys.Maths.I32)
(using Sys.Maths.F32)
(using HV)
(using Sys.Type)
(using Sys.Geometry.F32)
(using Sys.Random)
(using Rococo)
(using Rococo.Graphics)
(using Rococo.Entities)

(function GenerateFloorMesh (QuadVertices floorQuad)(ISectorFloorTesselator sector)(IQuadStackTesselator qst) -> :
	(MaterialVertexData floor)
	(sector.GetMaterial floor "floor")
		
	(qst.PushQuad floorQuad floor)
	(qst.MoveInputToOutput)
		
	(VertexTriangle topLeft)
	(VertexTriangle bottomRight)
	(while (qst.PopOutputAsTriangles topLeft bottomRight)
		(sector.AddFloorTriangle topLeft)
		(sector.AddFloorTriangle bottomRight)
	)
)

(function GenerateSpecialFloorMesh (QuadVertices floorQuad)(ISectorFloorTesselator sector)(IQuadStackTesselator qst) -> :
	(MaterialVertexData floor)
	(sector.GetMaterial floor "floor")
	
	(MaterialVertexData cfloor = floor)
	(cfloor.gloss = 1.2)
	
	(MaterialVertexData panels)
	(sector.GetMaterial panels "panels")
	
	(MaterialVertexData water)
	(sector.GetMaterial water "brickwork")
	(water.colour = 0x3FFF8080)
	(water.gloss = 0.2)
		
	(IScriptConfig config (ScriptConfig))
	(Float32 uvScale = (config.GetFloat "UV size" 0.5 0.01 10))	
	(Float32 depth = (config.GetFloat "Depth" 0.2 0.01 0.35))	
	(Float32 height = (config.GetFloat "Height" 0.25 0.01 0.35))	
	
	(Vec2 poolSpanX)
	(config.GetFloatRange "Outer x-span" poolSpanX 0.333 0.666 0 1)
	
	(Vec2 poolSpanY)
	(config.GetFloatRange "Outer y-span" poolSpanY 0.333 0.666 0 1)
	
	(Vec2 innerSpanX)
	(config.GetFloatRange "Inner x-span" innerSpanX 0.1 0.9 0 1)
	
	(Vec2 innerSpanY)
	(config.GetFloatRange "Inner y-span" innerSpanY 0.1 0.9 0 1)
	
	(qst.PushQuad floorQuad floor)
	
	(Rectf uv = 0 0 uvScale uvScale)
	(qst.SetTextureRect uv)
	
	(qst.SplitThreeRows floor cfloor floor poolSpanX.x poolSpanX.y)
	
	(qst.MoveOutputToInputWithMat cfloor)
	(qst.SplitThreeColumns floor cfloor floor poolSpanY.x poolSpanY.y)
	
	(if (sector.FoundationsExist)
		(qst.MoveOutputToInputWithMat floor)
		(qst.ClearInput)
	)
	
	(qst.MoveOutputToInputWithMat cfloor)
	(qst.AddCuboid 0 1 0 1 0.25 uvScale panels)
	(qst.ClearInput)
	
	(qst.MoveOutputToInputWithMat panels)
	
	(VertexTriangle topLeft)
	(VertexTriangle bottomRight)
	(while (qst.PopOutputAsTriangles topLeft bottomRight)
		(sector.AddFloorTriangle topLeft)
		(sector.AddFloorTriangle bottomRight)
	)
	
	(Vec3 up = 0 0 1)
	(qst.MoveInputToOutput)
	(qst.MoveOutputToInputWithNormalDotRange up 0.99 1.0)
	
	(Rectf hole = innerSpanX.x innerSpanY.y innerSpanX.y innerSpanY.x)
	(qst.Intrude hole depth uvScale panels water)
	
	(qst.ClearInput)
		
	(while (qst.PopOutputAsTriangles topLeft bottomRight)
		(sector.AddFloorTriangle topLeft)
		(sector.AddFloorTriangle bottomRight)
	)
)

(function GenerateCeilingMesh (QuadVertices ceilingQuad)(ISectorFloorTesselator sector)(IQuadStackTesselator qst) -> :
	(MaterialVertexData ceiling)
	(sector.GetMaterial ceiling "ceiling")

	(qst.PushQuad ceilingQuad ceiling)
	(qst.MoveInputToOutput)

	(VertexTriangle roofTL)
	(VertexTriangle roofBR)
	(while (qst.PopOutputAsTriangles roofTL roofBR)
		(sector.AddCeilingTriangle roofTL)
		(sector.AddCeilingTriangle roofBR)
	)
)

(function Main (Int32 id)->(Int32 exitCode):
	(IInstances instances (Instances))
	
	(ISectorFloorTesselator sector (SectorFloorTesselator))
	(IQuadStackTesselator qst (QuadStackTesselator))
	
	(Int32 nSquares = sector.NumberOfSquares)
	
	(if (sector.FoundationsExist == false)
		// First generate the physics mesh
		(#for(Int32 i = 0)(i < nSquares)(#inc i)
			(QuadVertices q)
			(sector.FloorQuad i q)
			
			(MaterialVertexData barrier)
			(sector.GetMaterial barrier "physics.hull")

			(qst.PushQuad q barrier)
			(qst.MoveInputToOutput)
			
			(VertexTriangle physicsHullTL)
			(VertexTriangle physicsHullBR)
			(while (qst.PopOutputAsTriangles physicsHullTL physicsHullBR)
				(sector.AddFloorTriangle physicsHullTL)
				(sector.AddFloorTriangle physicsHullBR)
			)
		)
	
		(#for(Int32 i = 0)(i < nSquares)(#inc i)
			(QuadVertices ceiling)
			(sector.CeilingQuad i ceiling)	
			(GenerateCeilingMesh ceiling sector qst)
		)
	)
		
	(qst.Clear)
	
	(QuadVertices floor)
	(sector.FloorQuad 0 floor)	// The first and largest square used for the floor feature
	(GenerateSpecialFloorMesh floor sector qst)
	
	(if (sector.FoundationsExist == false)
		(qst.Clear)
		(#for(Int32 i = 1)(i < nSquares)(#inc i)
			(sector.FloorQuad i floor)	
			(GenerateFloorMesh floor sector qst)
		)
	)
)