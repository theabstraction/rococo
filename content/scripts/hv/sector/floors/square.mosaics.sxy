(' #file.type rococo.hv)

(' #include 
	"!scripts/hv_sxh.sxy"
	"!scripts/types.sxy"
	"!scripts/mplat_sxh.sxy"
	"!scripts/hv/hv.types.sxy"
	"!scripts/mplat_types.sxy"
)

(namespace EntryPoint)
	(alias Main EntryPoint.Main)
	
(using Sys.Maths)
(using Sys.Maths.I32)
(using Sys.Maths.F32)
(using HV)
(using Sys.Type)
(using Sys.Geometry.F32)
(using Sys.Random)
(using Rococo)
(using Rococo.Graphics)
(using Rococo.Entities)

(function GenerateGraphicsMesh (QuadVertices floorQuad)(QuadVertices ceilingQuad)(ISectorFloorTesselator sector)(IQuadStackTesselator qst) -> :
	(MaterialVertexData white)
	(sector.GetMaterial white "panels")
	
	(MaterialVertexData black)
	(sector.GetMaterial black "floor")
	
	(IScriptConfig config (ScriptConfig))
	(Float32 uvScale = (config.GetFloat "UV size" 0.5 0.01 10))
	(Float32 floorTileSize = (config.GetFloat "Floor tile(m)" 0.5 0.1 10))
	(Float32 ceilingTileSize = (config.GetFloat "Ceiing tile(m)" 0.5 0.1 100))
	
	(qst.PushQuad floorQuad white)
	
	(if (sector.FoundationsExist)
		(qst.AddCuboid 0 1 0 1 0.05 0.25 black)
		(qst.ClearInput)
	
		(Vec3 up = 0 0 1)
		(qst.MoveOutputToInputWithNormalDotRange up 0.99 1.0)
	)
	
	(Rectf uv = 0 0 uvScale uvScale)
	(qst.TileMosaic black white uv floorTileSize)
		
	(VertexTriangle topLeft)
	(VertexTriangle bottomRight)
	(while (qst.PopOutputAsTriangles topLeft bottomRight)
		(sector.AddFloorTriangle topLeft)
		(sector.AddFloorTriangle bottomRight)
	)
	
	(if (not sector.FoundationsExist)
		(MaterialVertexData ceiling)
		(sector.GetMaterial ceiling "ceiling")

		(qst.PushQuad ceilingQuad ceiling)
		
		(if (ceilingTileSize > 10)
			(qst.MoveInputToOutput)
		else
			(MaterialVertexData mullions)
			(sector.GetMaterial mullions "mullions")
			(qst.TileMosaic ceiling mullions uv ceilingTileSize)
		)

		(VertexTriangle roofTL)
		(VertexTriangle roofBR)
		(while (qst.PopOutputAsTriangles roofTL roofBR)
			(sector.AddCeilingTriangle roofTL)
			(sector.AddCeilingTriangle roofBR)
		)
	)
)


(function Main (Int32 id)->(Int32 exitCode):
	(IInstances instances (Instances))
	
	(ISectorFloorTesselator sector (SectorFloorTesselator))
	(IQuadStackTesselator qst (QuadStackTesselator))
	
	(Int32 nSquares = sector.NumberOfSquares)
	
	(if (sector.FoundationsExist == false)
		// First generate the physics mesh
		(#for(Int32 i = 0)(i < nSquares)(#inc i)
			(QuadVertices q)
			(sector.FloorQuad i q)
			
			(MaterialVertexData barrier)
			(sector.GetMaterial barrier "physics.hull")

			(qst.PushQuad q barrier)
			(qst.MoveInputToOutput)
			
			(VertexTriangle physicsHullTL)
			(VertexTriangle physicsHullBR)
			(while (qst.PopOutputAsTriangles physicsHullTL physicsHullBR)
				(sector.AddFloorTriangle physicsHullTL)
				(sector.AddFloorTriangle physicsHullBR)
			)
		)
	)
	
	// Next generate the graphics mesh
	(#for(Int32 i = 0)(i < nSquares)(#inc i)
		(QuadVertices floor)
		(QuadVertices ceiling)
		(sector.FloorQuad i floor)	
		(sector.CeilingQuad i ceiling)	
		(GenerateGraphicsMesh floor ceiling sector qst)
	)
)