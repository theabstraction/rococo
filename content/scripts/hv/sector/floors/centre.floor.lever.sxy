(' #file.type rococo.hv)

(' #include 
	"!scripts/hv_sxh.sxy"
	"!scripts/types.sxy"
	"!scripts/mplat_sxh.sxy"
	"!scripts/hv/hv.types.sxy"
	"!scripts/mplat_types.sxy"
)

(namespace EntryPoint)
	(alias Main EntryPoint.Main)
	
(using Sys.Maths)
(using Sys.Maths.I32)
(using Sys.Maths.F32)
(using HV)
(using Sys.Type)
(using Sys.Geometry.F32)
(using Sys.Random)
(using Rococo)
(using Rococo.Graphics)
(using Rococo.Entities)

(function GenerateFloorMesh (QuadVertices floorQuad)(ISectorFloorTesselator sector)(IQuadStackTesselator qst) -> :
	(MaterialVertexData floor)
	(sector.GetMaterial floor "floor")
		
	(qst.PushQuad floorQuad floor)
	(qst.MoveInputToOutput)
		
	(VertexTriangle topLeft)
	(VertexTriangle bottomRight)
	(while (qst.PopOutputAsTriangles topLeft bottomRight)
		(sector.AddFloorTriangle topLeft)
		(sector.AddFloorTriangle bottomRight)
	)
)

(function MakeLever (Vec3 origin) -> :
	(IRodTesselator rod (RodTesselator))
	
	(rod.SetOrigin origin)
	
	(MaterialVertexData lowerShaft = 0x4000FFFF 0 0.1)
	(rod.SetMaterialTop lowerShaft)
	(rod.SetMaterialMiddle lowerShaft)
	(rod.SetMaterialBottom lowerShaft)
		
	(rod.AddTube 1.0 0.04 0.04 8)
	
	(MaterialVertexData upperShaft = 0x40007F7F 0 0.1)
	(rod.SetMaterialTop upperShaft)
	(rod.SetMaterialMiddle upperShaft)
	(rod.SetMaterialBottom upperShaft)
	
	(rod.AddTube 0.5 0.03 0.03 8)
	
	(rod.Advance -0.02)
	
	(MaterialVertexData knob = 0x60007FFF 0 0.2)
	(rod.SetMaterialTop knob)
	(rod.SetMaterialMiddle knob)
	(rod.SetMaterialBottom knob)
	
	(rod.AddSphere 0.1 8 8)
	
	(rod.Advance -0.02)
	
	(MaterialVertexData cap = 0x40000000 0 0.1)
	(rod.SetMaterialTop cap)
	(rod.SetMaterialMiddle cap)
	(rod.SetMaterialBottom cap)
	
	(rod.AddTube 0.05 0.03 0.03 8)
	
	(ISectorComponents components (SectorComponents))
	(components.BuildComponent "floor.lever")
	
	(VertexTriangle triangle)
	(while (rod.PopNextTriangle triangle)
		(components.AddTriangle triangle)
	)
	
	(components.CompleteComponent true)
)

(function GenerateSpecialFloorMesh (QuadVertices floorQuad)(ISectorFloorTesselator sector)(IQuadStackTesselator qst) -> :
	(MaterialVertexData floor)
	(sector.GetMaterial floor "floor")
	
	(MaterialVertexData rod)
	(sector.GetMaterial rod "rails")
	
	(MaterialVertexData blank)
	(sector.GetMaterial blank "casing")
	
	(blank.gloss = 5)
	
	(MaterialVertexData cfloor = floor)
	(cfloor.gloss = 1.2)
	
	(MaterialVertexData panels)
	(sector.GetMaterial panels "panels")
	
	(MaterialVertexData water)
	(sector.GetMaterial water "brickwork")
	(water.colour = 0x3F8080A0)
	(water.gloss = 0.2)
		
	(qst.PushQuad floorQuad floor)
	
	(Rectf uv = 0 0 1 1)
	(qst.SetTextureRect uv)
	
	(Vec2 span)
	(GetTriSpan floorQuad.positions.d floorQuad.positions.a floorQuad.positions.b span)
	
	(Vec2 p0 = 0.1 0.9)
	(Vec2 deltaMetres = 0.1 -0.2)
	(Float32 drx = (deltaMetres.x / span.x) )
	(Float32 dry = (deltaMetres.y / span.y) )
	(Vec2 deltaRelative = drx dry)
	(Vec2 p1 = p0 + deltaRelative)
	(Rectf hole = p0.x p0.y p1.x p1.y)
	(qst.Intrude hole 0.25 0.5 floor water)
	(qst.MoveOutputToInputWithMat water)
	
	(VertexTriangle topLeft)
	(VertexTriangle bottomRight)
	(while (qst.PopOutputAsTriangles topLeft bottomRight)
		(sector.AddFloorTriangle topLeft)
		(sector.AddFloorTriangle bottomRight)
	)
	
	(Vec3 leverOrigin)
	(leverOrigin.x = (0.5 * (p0.x + p1.x)))
	(leverOrigin.y = (0.5 * (p0.y + p1.y)))
	(leverOrigin.z = 0)
	
	(leverOrigin.x = (leverOrigin.x * span.x))
	(leverOrigin.y = (leverOrigin.y * span.y))
	
	(leverOrigin = leverOrigin + floorQuad.positions.d)
	(leverOrigin.z = (leverOrigin.z - 0.25))
	
	(MakeLever leverOrigin)
)

(function GenerateCeilingMesh (QuadVertices ceilingQuad)(ISectorFloorTesselator sector)(IQuadStackTesselator qst) -> :
	(MaterialVertexData ceiling)
	(sector.GetMaterial ceiling "ceiling")

	(qst.PushQuad ceilingQuad ceiling)
	(qst.MoveInputToOutput)

	(VertexTriangle roofTL)
	(VertexTriangle roofBR)
	(while (qst.PopOutputAsTriangles roofTL roofBR)
		(sector.AddCeilingTriangle roofTL)
		(sector.AddCeilingTriangle roofBR)
	)
)

(function Main (Int32 id)->(Int32 exitCode):
	(IInstances instances (Instances))
	
	(ISectorFloorTesselator sector (SectorFloorTesselator))
	(IQuadStackTesselator qst (QuadStackTesselator))
	
	(Int32 nSquares = sector.NumberOfSquares)
	
	(if (not sector.FoundationsExist)
		// First generate the physics mesh
		(#for(Int32 i = 0)(i < nSquares)(#inc i)
			(QuadVertices q)
			(sector.FloorQuad i q)
			
			(MaterialVertexData barrier)
			(sector.GetMaterial barrier "physics.hull")

			(qst.PushQuad q barrier)
			(qst.MoveInputToOutput)
			
			(VertexTriangle physicsHullTL)
			(VertexTriangle physicsHullBR)
			(while (qst.PopOutputAsTriangles physicsHullTL physicsHullBR)
				(sector.AddFloorTriangle physicsHullTL)
				(sector.AddFloorTriangle physicsHullBR)
			)
		)
	
		(#for(Int32 i = 0)(i < nSquares)(#inc i)
			(QuadVertices ceiling)
			(sector.CeilingQuad i ceiling)	
			(GenerateCeilingMesh ceiling sector qst)
		)
	
		(qst.Clear)
		
		(QuadVertices floor)
		(sector.FloorQuad 0 floor)	// The first and largest square used for the floor feature
		(GenerateSpecialFloorMesh floor sector qst)
	
		(qst.Clear)
		(#for(Int32 i = 1)(i < nSquares)(#inc i)
			(sector.FloorQuad i floor)	
			(GenerateFloorMesh floor sector qst)
		)
	else
		(IMessaging messaging (Messaging))
		(messaging.Log "The script requires a sector to be a square")
	)
)