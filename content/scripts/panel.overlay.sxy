(' #file.type rococo.mplat.panel)

(' #include 
	"!scripts/mplat.pane.sxh.sxy"
	"!scripts/types.sxy"
)

(namespace EntryPoint)
	(alias Main EntryPoint.Main)
	
(using Rococo)
(using Sys.Maths)
(using Sys.Type)

(function SetTransparentBackground (IPane pane)-> :
	(pane.SetColourBk1   0x00000000 0x00000000)
	(pane.SetColourBk2   0x00000000 0x00000000)
	(pane.SetColourEdge1 0x00000000 0x00000000)
	(pane.SetColourEdge2 0x00000000 0x00000000)
)

(function AddCredit (IString text)(IPaneContainer builder)(IString cmd)(Bool defer)-> :
	(Recti rect = (0 0)(20 60))
	(ILabelPane label = (builder.AddLabel 1 text rect))
	(IPane labelBase = label.Base)
	(labelBase.SetColourFont 0xFFFFFFFF 0xFFFFFFFF)
	(labelBase.SetColourBk1  0x00000000 0x00000000)
	(labelBase.SetColourBk2  0x00000000 0x00000000)
	(labelBase.SetColourEdge1 0x00000000 0x00000000)
	(labelBase.SetColourEdge2 0x00000000 0x00000000)
	(if (cmd.Length > 0)
		(labelBase.SetCommand 1 defer cmd)
	)
	(label.SetAlignment 0 0 0 0)
)

// Norfolk & Durham, Simon Bailey, Mike Barton, John Glen MP
(function AddLabel (IString text)(IPaneContainer builder)(IString cmd)(Bool defer)-> :
	(Recti rect = (0 0)(20 70))
	(ILabelPane label = (builder.AddLabel 0 text rect))
	(IPane labelBase = label.Base)
	(labelBase.SetColourFont 0xFFD0D0D0 0xFFFFFFFF)
	(labelBase.SetColourBk1  0x00000000 0xFF200000)
	(labelBase.SetColourBk2  0x00000000 0xFF800000)
	(labelBase.SetColourEdge1 0xFF404040 0xFFBFBFBF)
	(labelBase.SetColourEdge2 0xFF606060 0xFFFFFFFF)
	(labelBase.SetCommand 1 defer cmd)
	(label.SetAlignment 0 0 0 0)
)

(function AddVec2iVec2i (Vec2i a)(Vec2i b)(Vec2i sum)-> :
	(sum.x = (a.x + b.x))
	(sum.y = (a.y + b.y))
)

(function SubtractVec2iVec2i (Vec2i a)(Vec2i b)(Vec2i dif)-> :
	(dif.x = (a.x - b.x))
	(dif.y = (a.y - b.y))
)

(function GetCentre (Recti rect)(Vec2i centre)-> :
	(Vec2i sum = rect.topLeft + rect.bottomRight)
	(centre.x = (sum.x / 2))
	(centre.y = (sum.y / 2))
)

(function GetSpan (Recti rect)(Vec2i span) -> :
	(span.x = (rect.bottomRight.x - rect.topLeft.x))
	(span.y = (rect.bottomRight.y - rect.topLeft.y))
)

(function GetCentredRect (Int32 dx)(Int32 dy)(Recti container)(Recti centredRect)-> :
	(Vec2i span)
	(GetSpan container span)
	(Int32 dx2 = (dx / 2))
	(Int32 dy2 = (dy / 2))
	(Vec2i centre)
	(centre.x = (span.x / 2))
	(centre.y = (span.y / 2))
	(Vec2i halfSpan = dx2 dy2)
	(Vec2i topLeft = centre - halfSpan)
	(Vec2i bottomRight = centre + halfSpan)
	(centredRect.topLeft = topLeft)
	(centredRect.bottomRight = bottomRight)
)

(function InflateRect (Int32 dx)(Int32 dy)(Recti container)(Recti rect)-> :
	(rect.topLeft.x = (0 - dx))
	(rect.topLeft.y = (0 - dy))
	
	(Vec2i span)
	(GetSpan container span)
	(rect.bottomRight.x = (span.x + dx))
	(rect.bottomRight.y = (span.y + dy))
)
	
(function Main (Int32 id)->(Int32 exitCode):
	(IPaneBuilder builder (PaneBuilder))
	(IPaneContainer root = builder.Root)
	(IPane pane = root.Base)
	(pane.SetColourBk1   0x00000000 0x00000000)
	(pane.SetColourBk2   0x00000000 0x00000000)
	(pane.SetColourEdge1 0xFFFFFFFF 0xFFFFFFFF)
	(pane.SetColourEdge2 0xFFFFFFFF 0xFFFFFFFF)
	
	(Recti screen)
	(pane.GetRect screen)
	
	(Recti containerRect)
	(InflateRect -16 -16 screen containerRect)
	(IPaneContainer container = (root.AddContainer containerRect))
	(IPane cbase = container.Base)
	(cbase.SetColourBk1   0xF0000000 0xF0000000)
	(cbase.SetColourBk2   0xF0000000 0xF0000000)
	(cbase.SetColourEdge1 0xEFC0C0C0 0xFFFFFFFF)
	(cbase.SetColourEdge2 0xEFC0C0C0 0xFFFFFFFF)
	
	(cbase.AlignLeftEdges 4 false)
	(cbase.AlignRightEdges 4 false)
	(cbase.LayoutVertically 4 -1)
	
	(Vec2i span = containerRect.bottomRight - containerRect.topLeft)
	(Recti tabRect = (0 0) span)
	(ITabContainer tabs = (container.AddTabContainer 20 8 tabRect))
	(tabs.AddTab 67 "Window"	"overlay.window")
	(tabs.AddTab 90 "Renderer"  "overlay.renderer")
	(tabs.AddTab 70 "Camera"	"overlay.camera")
	(tabs.AddTab 88 "Textures"  "overlay.textures")
	(tabs.AddTab 65 "Meshes"	"overlay.meshes")
	(tabs.AddTab 32 "OS"		"overlay.os")
	(tabs.AddTab 60 "Cache"	"overlay.cache")
	(IPane tbase = tabs.Base)
	(tbase.SetColourBk1   0xE0200000 0xE0200000)
	(tbase.SetColourBk2   0xE0000020 0xE0000020)
	(tbase.SetColourEdge1 0xEFC0C0C0 0xFFFFFFFF)
	(tbase.SetColourEdge2 0xEFC0C0C0 0xFFFFFFFF)
)