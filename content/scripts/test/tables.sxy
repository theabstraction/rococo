(' #import (tables "Tables"))

// TODO -> have tables.types.sxy part of the package
(' #include 
	"!tables/generated.types.sxy" 
	"!scripts/tables.types.sxy"
)

(namespace EntryPoint)
	(alias Main EntryPoint.Main)


(using Rococo.Quotes)
(using Rococo.Science.Materials)
(using Sys.Type)
(using Rococo.Strings)

(function Main (Int32 id)->(Int32 exitCode):
	(IPeriodicTable periodicTable (GetPeriodicTable))
	(Int32 i = periodicTable.NumberOfRows)
	(if ((i < 100) or (i > 200))
		(Sys.Throw 0 "Bad number of rows")
	)
	
	(PeriodicTableRow row)
	(periodicTable.GetRow 92 row)
	
	(ElementSymbol symbol = row.symbol)
	
	(if ((row.atomicMass < 238) or (row.atomicMass > 239))
		(Sys.Throw 0 "Bad uranium")
	)

	(Sys.Type.IStringBuilder sb = (Sys.Type.NewTokenBuilder))
	(ElementNameAppendString row.element sb)
	
	(if ((Sys.Type.Strings.Compare sb "Uranium") != 0)
		(Sys.Throw 0 "Bad element name")
	)

	(Bool found)
	(Int32 pu)
	(TryParseElementName "Plutonium" -> found pu)
	(if (not found)
		(Sys.Throw 0 "Could not parse 'Plutonium'")
	)

	(if (pu != 94)
		(Sys.Throw 0 "Expected atomic number of Pu to be 94")
	)

	(ILocalizedText local (LocalizedText))

	(LocalizedTextRow localizedRow)
	(localizedRow.english = (Sys.Type.NewStringBuilder 8192))
	(localizedRow.german = (Sys.Type.NewStringBuilder 8192))
	(local.GetRow 1 localizedRow)
	
	(Bool startsWithPrinces)
	(Sys.Type.Strings.StartsWith localizedRow.english "Princes" -> startsWithPrinces)
	
	(if (not startsWithPrinces)
		(Sys.Throw 0 "LocalizedTextRow(1):English - Does not start with 'Princes'")
	)

	(QuotesRow qrow)
	(qrow.text = (Sys.Type.NewStringBuilder 8192))
	(IQuotes quotes (Rococo.Quotes.GetQuoteTable))
	(quotes.GetRow 1 qrow)

	(Bool startsWithNoMan)
	(Sys.Type.Strings.StartsWith qrow.text "No man but a blockhead" -> startsWithPrinces)
	
	(if (not startsWithNoMan)
		(Sys.Throw 0 "Quotes(1):English - Does not start with 'No man but a blockhead'")
	)
)